% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd --- a package to shorten preambles
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a phd for defining a class.
%</readme>
%<*readmemd>

This work consists of the file  `phd.dtx`,
and the derived files   `phd.ins`,  `phd.pdf`, and `phd.sty`.

###Installation

run
          
           pdflatex phd.dtx
           makeindex -s gind.ist phd.idx

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

%</readmemd>

%<*TODO>
add tcolorbox support
%</TODO>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex

\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- short description.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2011 by Dr. Yiannis Lazarides <yannislaz@gmail.com>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Dr. Yiannis Lazarides.

This work consists of the file  phd.dtx
and the derived files              phd.ins,
                                   phd.pdf, and
                                   phd.sty.

\endpostamble
\usedir{tex/latex/phd}
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}}
\generate{
  \file{MWE-02.tex}{\from{\jobname.dtx}{MWE-02}}
  \file{MWE-03.tex}{\from{\jobname.dtx}{MWE-03}}
}
\generate{
  \file{test-tufte.tex}{\from{\jobname.dtx}{test-tufte}}
  \file{test-memoir.tex}{\from{\jobname.dtx}{test-memoir}}
  \file{test-scrartcl.tex}{\from{\jobname.dtx}{test-scrartcl}}
  \file{test-algorithms.tex}{\from{\jobname.dtx}{test-algorithms}}
  \file{test-hyphenation.tex}{\from{\jobname.dtx}{test-hyphenation}}
 }
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{tex/latex/phd}

\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}

\nopreamble\nopostamble
\usedir{source/phd}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\generate{
  \file{README.md}{\from{\jobname.dtx}{readmemd}}
}

\generate{
  \file{TODO.tex}{\from{\jobname.dtx}{TODO}}
}

\generate{
  \file{MWE-01.tex}{\from{\jobname.dtx}{MWE-01}}
}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi

%</internal>
%<*driver>
\listfiles
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
%\usepackage{libertine}
%\renewcommand{\ttfamily}{\fontencoding{OT1}\fontfamily{cmtt}\selectfont}
\usepackage{lmodern,algorithm2e} %lmodern,

\usepackage[toc,lof,lot]{multitoc}
%\usepackage{dateiliste}
\usepackage{\jobname}
\usepackage[listings,theorems]{tcolorbox}
\tcbset{before={\par\medskip\pagebreak[0]\noindent},after={\par\medskip}}%
\usepackage{multicol}
\usepackage{hypdoc}
\hypersetup{pdftex,
  bookmarks,
  raiselinks,
  pageanchor,
  hyperindex,
  colorlinks,
  allcolors=theblue, 
  %anchorcolor= blue,
  %filecolor=blue,
  urlcolor=theblue,
  linkcolor= theblue,
  pdftitle={My Title},
 }

% add pdfinfo  
% 
% 

%\newcommand*{\file}[1]{\texttt{#1}}
\newcommand*{\pkg}[1]{\texttt{#1}}
%\usepackage[numbered]{hypdoc}
\definecolor{lstbgcolor}{rgb}{0.9,0.9,0.9}
 
 \usepackage{fancyvrb}
\newcommand*{\Lpack}[1]{\textsf {#1}}           
\newenvironment{example}
  {\VerbatimEnvironment
   \begin{VerbatimOut}[gobble=2]{example.out}}
  {\end{VerbatimOut}
   \begin{center}
   \fbox{\begin{minipage}{.9\linewidth}
     \lstset{breakatwhitespace=true,breaklines=true,language=TeX,basicstyle=\small}
     \lstinputlisting[]{example.out}
   \end{minipage}}

   \fbox{\begin{minipage}{.9\linewidth}
     \input{example.out}
   \end{minipage}}
\end{center}
}
%%http://tex.stackexchange.com/questions/75055/print-filelist-to-pdf/75064#75064
%\printFileList
%
% COMMENT THE NEXT LINE TO INCLUDE THE CODE
% \AtBeginDocument{\OnlyDescription}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
   \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%  \CheckSum{720}
%  \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
% \changes{1.01}{2013/01/27}{Added multicol}
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% \providecommand*{\url}{\texttt}
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
%
%
% \maketitle
%
% \abstract{This is a helper package to compliment standard classes by
% pre-loading a set of packages and providing some opiniated settings. Pretty
% much work in progress, and currently supplements, the tufte-class well.}
% 
% ^^A Table of contents in two columns --- borrowed from the standard 
% ^^A package of ``doc.dtx''
% 
% \newif\ifmulticols
% \IfFileExists{multicol.sty}{\multicolstrue}{}
%
% ^^A\ifmulticols
% ^^A\addtocontents{toc}{\protect\begin{multicols}{2}}
% ^^A\fi
%
% {\parskip 0pt                ^^A We have to reset \parskip
%                              ^^A (bug in \LaTeX)
% \tableofcontents
% \listoftables
% \listoffigures
% }
% 
% \section{Introduction}
% 
% \LaTeX2e, does not provide a standard library, but comes equipped with
% a packagee mechanism that allows code extensions to be loaded as required.
% This has created a strong vibrant community, hundreds of packages and a 
% headache to both new and seasoned users. What packages are available, when
% to use them and in which order is a common theme for many questions on
% lists and |TX.SE|.

% It is quite common during the writing of a thesis or book
% for the author to keep on adding macros and packages
% at the preamble of the document. In most cases this can
% be satisfactory but in many others it leads to
% incompatibilities and errors. This package aims at
% minimizing one's preamble, by prefetching a number of
% commonly used packages. It also aims at loading them
% in the right order and providing patches for conflicts.
% 
% I am hoping that using this package, will lead to less
% frustrations with the intricacies of \LaTeX2e\ packages.
%
% Although I expect most users to just load the package, using
% the standard command:
%
% \begin{teX}
%  \usepackage{phd}
% \end{teX}
% it will be better for the longer projects to just fork the
% package and adapt it to your needs.
%
% Most of the documentation can be found in the implementation part.
%
% \newpage
% \input{packages-table}
% 
% \section{Ordering of Packages}
% 
% One package that normally leads to errors is the 
% |hyperref|. As a lot of internal commands of the kernel
% and of some packages it has to be loaded at the end
% of the preable with the exception of some packages! 
% 
% This manual is typeset according to the conventions of the
% \LaTeX \textsc{docstrip} utility which enables the automatic
% extraction of the \LaTeX{} macro source files~\cite{GOOSSENS94}.
%
% 
% \href{http://tex.stackexchange.com/questions/96350/problem-with-algorithmic-and-hyperref}{problem with algorithmic and hyperref}
% \begin{verbatim}
%\usepackage{float}  % load float package first!
%
%\usepackage{hyperref} % let hyperref patch the float package stuff
%.
% \usepackage{algorithm} % let algorithm use the patched version of the float package
% \end{verbatim}
% \section{Conventions}
% \subsection{Defining Colors}
% All color definitions are of the form |the<color>|. So the setting for |theblue| is called
% |theblue|. This provides easy to remember commands.
% 
% \section{Document Structure}
% We do not load too many packages for document structure, a these are expected to be
% treated at class level.
% \begin{table}[ht]
% \centering
% \caption{Packages used for structure.}
% \begin{tabular}{ll}
%   \toprule
%   Package  & Default\\
%   \midrule
%   |multicol| & called by author  \\
%   \bottomrule
% \end{tabular}
% \end{table}
% \section{Use of boxes}
% You can use the |tcolorbox| package to create nicely formatted boxes for examples.
%\newcounter{texercise}[section]
%\begin{tcolorbox}[colback=blue!5,colframe=blue!50!black,arc=1mm,
%                          theorem={Equations}{texercise}{More on summation}{myMarker}]{}{}
%\medskip
%
%\begin{tabular}{lr@{~}c@{~}l@{\qquad}r}
%\multicolumn{5}{l}{\hspace{-2ex}\textbf{Line Values.}} \\
%\multicolumn{5}{r}{}\\
%\multicolumn{4}{l}{Altitude of triangle on side $a$,} \\
%& $h$ &=& \( \displaystyle \frac{2}{a}
%             \sqrt{s(s-a)(s-b)(s-c)} \) & \\
%%
%\multicolumn{4}{l}{Median of triangle on side $a$,} \\
%& $m$ &=& \( \frac{1}{2} \sqrt{2(b^2+c^2) - a^2} \) & \ \\
%\multicolumn{5}{l}{\hspace{-2ex}\textbf{Areas.}} \\
%Rectangle,      & $S$ &=& $b\times h$ &  \\
%Square,         & $S$ &=& $b^2$        &  \\
%\end{tabular}
%\end{tcolorbox}
%
% \section{Version control with Git and Github}
% If you are involved with code or a publication that will have frequent changes, you should consider
% some type of version control system. My own recommendation is to use |git| and an online repository such
% as |github|. The latter is currently very fashionable and makes sharing code easier. Note that the |github|
% offers both public as well as private repositories. The general recommendation is that for unpublished work
% such as a thesis or code under development, it is preferable to go for a private repository. 
% 
% \subsection*{What is the difference between Git and GitHub?}
%git is a version control, system think of it as a series of snapshots (commits) of your code. You see 
%a path of this snapshots, in which order they where created. You can make branches to experiment and come back to snapshots you took.
%GitHub, is a web-page on which you can publish your git repositories and collaborate with other people.
%
% \subsection*{Is git saving every repository locally (in the user's machine) and in GitHub?}
%
% No, it's only local. You can decide to push (publish) some branches on GitHub.
%
% \subsection*{Can you use Git without GitHub? If yes, what would be the benefit for using GitHub?}
%
% Yes, it runs local. You could back it up with dropbox. See also \href{http://dotmonster.co/backup-and-sync-folders-with-dropbox-and-symbolic-links/}{how to sync your git folders to dropbox}.
%
%\subsection*{How does Git compare to a backup system such as Time Machine?}
%
%It's a different thing, git lets you track changes and your development process. If you use git with GitHub, it becomes effectively a backup. However usually you would not push all the time to GitHub, at which point you do not have a full backup if things go wrong. I use git in a folder that is synchronized with dropbox.
%
% To synchronize the two, you create a symlink in your Git folder, i.e., in your repository. This can even be done in windows although it is normally called a \textit{short-cut}. Write click in the folder and create a short-cut to the drop-box folder. For example if you create a folder \texttt{pic} to hold your pictures, this folder will be automatically uploaded at \texttt{dropbox}. You don't want your pictures tracked at Github, as they do not really need version control. Do not forget to exclude them by typing in the \texttt{.gitignore} file the directive  \verb|*.lnk|.
%
%\subsection*{Is this a manual process, in other words if you don't commit you wont have a new version of the changes made?}
%
%Yes, commiting and pushing are both manual.
%
%\subsection*{If are not collaborating and you are already using a backup system why would you use Git?}
%
% You program worked. You developed more, your program does not work. git diff, shows you the difference between the current code and the last working commit.
%
% Or you just go back to the last working. You want to try a change, but are not sure it really will work. 
% You create a branch, test you code change. If it works fine, you merge it to the main branch. If it does not you throw the branch away and go back to the main branch.
% You did some debugging. Before you commit you always look at the changes from the last commit. You see your debug print statement that you forgot to delete.
%
%Make sure you check gitimmersion.com.
% 
% \StopEventually{}

%<*package>
% \section{Implementation}
%
%    Standard file identification. We first announce the package and require that it be used with LaTeX2e. 
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}% LaTeX 2.09 can't be used (nor non-LaTeX)
[1994/12/01]% LaTeX date must be December 1994 or later
\ProvidesPackage{phd}[2013/2/26 v1.0 less preamble (YL)]
%    \end{macrocode}
%    
% \section{Best practices} 
% 
% We load a few packages for fixes and errors and |nag| if outdated packages are used.
% Modify to suit your requirements.  
% Package management is a bit complex to avoid errors
% with options.
%To find out if a package has already been loaded, use
%|\@ifpackageloaded|\meta{package}\meta{true}\meta{false}.
%|\@ifpackagelater| To find out if a package has already been loaded with a version more recent
%|\@ifclasslater| than version, use |\@ifpackagelater|\meta{hpackagei}\meta{hversioni}\meta{true}\meta{hfalsei}.
%|\@ifpackagewith| To find out if a package has already been loaded with at least the options
%hoptionsi, use |\@ifpackagewith|\meta{hpackagei}\meta{hoptionsi}\meta{htruei}\meta{hfalsei}. 
%There exists one package that can't be tested with the above commands: the
%fontenc package pretends that it was never loaded to allow for repeated reloading
%with different options (see ltoutenc.dtx for details).
%
% \subsection{Best Practices}
% 
% We include the following two packages to provide the standard fixes
% for \LaTeX2e\ and the |nag| package to provide some guidance as to good
% practices. We set the |nag| keys to |orthodox| and |l2tabu.|
% \url{http://tex.stackexchange.com/questions/19264/techniques-and-packages-to-keep-up-with-good-practices?rq=1}
% and \href{http://stackoverflow.com/questions/193298/best-practices-in-latex}{best practices in LaTeX.}
%    \begin{macrocode}
\RequirePackage{fixltx2e}                % LaTeX2e fixes
%    \end{macrocode}
%
% We load pgfkeys for key management.
%
%    \begin{macrocode}
\RequirePackage{pgf,pgfkeys}               % before onlyasmath
\newcommand\cxset{\pgfqkeys{/phd }} %Notice this is pgf q keys
%
%
\cxset{nag keys/.store in =\nagkeys@cx,
       onlyamsmath keys/.store in=\onlyamsmathkeys@cx,
       xcolor keys/.store in=\xcolorkeys@cx}
%        
%
\cxset{nag keys = {l2tabu,%
                   orthodox,%
                   %
                  }}
%    \end{macrocode}
%
% For |xcolor| we try and load as many pre-defined colornames as
% possible.


%    \begin{macrocode}
\cxset{xcolor keys={fixpdftex,xtable,usenames,dvipsnames,svgnames,x11names}}                     
% Set amsmath keys
\cxset{onlyamsmath keys = {all}}
%
%    \end{macrocode}
%
%    \begin{macrocode}
\PassOptionsToPackage{\nagkeys@cx}{nag}
\RequirePackage{nag}   
%    \end{macrocode}
%

%
% \begin{macro}{onlyasmath}
% The package |onlyasmath| also provides errors for deprecated math
% commands like using |$$|\ldots|$$| which can result in unwanted spaces
% being introduced in the typsetting of the document. The recommended 
% way is to use |\[|\ldots|\]|. The package was developed by Harold Harders
% and although targetted for class writers one might as well use it directly.
% 
%    \begin{macrocode}

\PassOptionsToPackage{\onlyamsmathkeys@cx}{onlyamsmath}
\RequirePackage{onlyamsmath} 
\RequirePackage{microtype}
%    \end{macrocode}
% \end{macro}
%
% I prefer to issue an error rather than a warning to instill good
% practices early during document processing.
% 
% 
% \subsection{Graphics}
% 
% We load the package |graphicx| with no options. We let |graphicx|, to 
% handle any draft options via the class itself. We load the package |caption|
% for any captions outside floats. (Needs checking where to place).
% \href{http://tex.stackexchange.com/questions/3131/graphicspath-for-miktex}{graphicspath for MikTeX} check
% adds figures etc to paths. We add some common paths. If you call your image
% folders |image| or |graphics| you don't need to do anything else.
% 
%    \begin{macrocode}
\RequirePackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
\graphicspath{{graphics/}{graphics//}{images//}{./graphics/}{../graphics/}{./pic/}{../pic}}
\usepackage{wrapfig}
%    \end{macrocode} 
%
% \begin{macro}{rotating}
% The package performs
% most sorts of rotation one might like, including rotation of complete floating
% figures and tables. The package was developed by Robin Fairbairns
% Sebastian Rahtz and Leonor Barroca. We use the option |quiet| as the 
% package is rather verbose.
%
%    \begin{macrocode}
\RequirePackage[quiet]{rotating}
%    \end{macrocode} 
% \end{macro}
% 
% \section{Color Management}
%
% Most classes load the |xcolor| package, including
% it here, should either be able to check if it was 
% loaded by the class or to pass the options before
% the class itself. This package is a common source
% of errors, as classes load it with mostly different options.
% Because of this is also a good example to test our code
% in a number of minimal working examples.
%
%    \begin{macrocode}
\@ifpackageloaded{xcolor}{}%
 {\PassOptionsToPackage{\xcolorkeys@cx}{xcolor}
  \RequirePackage{xcolor}}

\definecolor{theblue} {rgb}{0.02,0.04,0.48}
\definecolor{thered}  {rgb}{0.65,0.04,0.07}
\definecolor{thegreen}{rgb}{0.06,0.44,0.08}
\definecolor{thegrey} {gray}{0.5}
\definecolor{theshade}{gray}{0.94}
\definecolor{theframe}{gray}{0.75}
\definecolor{lightgray}{gray}{0.6}
%    \end{macrocode}
% 
%    \begin{macrocode}
\newcommand{\done}{\cellcolor{teal}done}  
\newcommand{\partialdone}{\cellcolor{yellow}done}
\newcommand{\hcyan}[1]{{\color{teal} #1}}
%    \end{macrocode}
%
%
% \section{Lipsum}
%
% In publishing and graphic design, lorem ipsum is placeholder text (filler text) commonly used to demonstrate the graphics elements of a document or visual presentation, such as font, typography, and layout, by removing the distraction of meaningful content. The lorem ipsum text is typically a section of a Latin text by Cicero with words altered, added and removed that make it nonsensical in meaning and not proper Latin. Other packages exist such as |kantlipsum| and |blindtext|, however,
%both result in somewhat legible texts, which defeats the purpose of providing texts that the reader is not going to read. the extensions |lipsumx| aim at
%providing a gap between the three packages. It provides extensions
% for full document testing.

%    \begin{macrocode}
\newif\ifLIPSUM
\RequirePackage{lipsum}
%    \end{macrocode}
%
% \section{Tables}
% 
% \begin{macro}{\inc}
% \begin{macro}{\resetinc}
%
% It is highly unlikely that a publication, would not have a table
% somewhere, to make life easier we load Simon Fear's |booktabs|. The manual is a must
% read if you want to typeset typographically attractive tables.\footnote{Notice I haven't said
% typographically correct, there is no such thing.} We don't need to set any keys for the
% package.
%

%    \begin{macrocode}
\RequirePackage{booktabs}
\newcounter{step}
\def\resetinc{\setcounter{step}{0}}
\def\inc{\stepcounter{step}\thestep}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{tabularx}
% David Carlisle's package enables the typesetting of fixed width tables and can stretch
% specific columns. The package loads the |array| package, but we save it from some
% trouble by pre-loading it first, so we can capture its loading. The package has two keys
% |infoshow| and |debugshow| which we don't bother at this stage to load.
% 
%    \begin{macrocode}
\RequirePackage{array}
\RequirePackage{tabularx}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{dcolumn}
% The |dcolumn| package also by David Carlisle is loaded next. This package 
% defines a system for defining columns of entries in an |array|
% or tabular which are to be aligned on a `decimal point'. It also loads the |array|
% package, which we have already loaded.
% 
%    \begin{macrocode}
\RequirePackage{dcolumn}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{longtable}
% 
% Perhaps the |longtable| package, needs no introduction. It has some
% peculiar settings and sometimes a couple of runs before it settles
% down. The package has four keys |errorshow|, |pausing|, |set| and |final| looks 
% as if they deprecated, at this stage we make onlty a mental note of it.
% The package cannot be used within |multicolumn| environments and will
% emit an error. 
% 
%    \begin{macrocode}
\RequirePackage{longtable}
%    \end{macrocode}
% \end{macro}   


% \begin{macro}{multirow}
% 
% The |multirow| by Piet van Oostrum and its two companion packages
% bigdelim and bigstrut can be used to define multirow cells. They are difficult
% to get right and in most instances one can redesign the tables better without
% resorting to multi-rows. It has a strange interaction with the |colortbl|
% and a hack around its usage which we will load next.
% 
%    \begin{macrocode}
\RequirePackage{colortbl}
\RequirePackage{multirow}
\RequirePackage{lscape}
\RequirePackage{threeparttable}
%    \end{macrocode}
% \end{macro}

% 

%    
% \section{Package Management} 
%    
% Each of the packages used by this document is loaded conditionally.
% However, it might be nice to know if we have a complete set.  So we
% define |\ifcomplete| which starts true, but gets set to false if any
% package is missing. Some code is necessary in order to manage the complexity.
% I am idebted to the source of symbols.tex for some of the macros.
% 
% There are a number of symbols (e.g., \cmd{\Square}) that are defined by      
% multiple packages.  In order to typeset all the variants in this       
% document, we have to give glyph a unique name.  To do that, we define  
% \cmd{\savesymbol{XXX}}, which renames a symbol from \cmd{\XXX} to \cmd{\origXXX}, and    
% \cmd{\restoresymbols{yyy}{XXX}}, which renames \cmd{\origXXX} back to \cmd{\XXX} and     
% defines a new command, |\yyyXXX|, which corresponds to the most recently 
% loaded version of |\XXX|.                                                
%                                                                        
% This implementation of \savesymbol and \restoresymbol was copied from  
% the savesym package, which started with symbol.tex's old definitions   
% of those macros and improved upon them.  However, \renamerobustsymbol  
% and |\ifnotsavedsym| are new to this set.                                
%                                                                        

% Save a symbol that we know is going to get redefined.
%    \begin{macrocode}
\newcommand*{\savesymbol}[1]{%
  \expandafter\let\csname orig#1\expandafter\endcsname\csname#1\endcsname
  \expandafter\let\csname #1\endcsname\relax
}
%    \end{macrocode}
%    
% Restore a previously saved symbol, and rename the current one.
%    \begin{macrocode}
\newcommand*{\restoresymbol}[2]{%
  \expandafter\global\expandafter\let\csname#1#2\expandafter\endcsname%
    \csname#2\endcsname
  \expandafter\global\expandafter\let\csname#2\expandafter\endcsname%
    \csname orig#2\endcsname
}
%    \end{macrocode}   
% Rename a robust command.
%    \begin{macrocode}
\newcommand*{\renamerobustsymbol}[2]{%
  \expandafter\let\expandafter\origrealcommand
    \csname #2\space\endcsname
  \expandafter\global\expandafter\let\csname#1#2\endcsname=\origrealcommand
}
%    \end{macrocode}
% Test if a symbol is not saved.
%    \begin{macrocode}
\def\ifnotsavedsym@helper#1#2!{\expandafter\ifx\csname orig#2\endcsname\relax}
\newcommand*{\ifnotsavedsym}[1]{%
  \expandafter\ifnotsavedsym@helper\string#1!%
}
%    \end{macrocode}
% \begin{macro}{\ifcomplete}
%    \begin{macrocode}
\newif\ifcomplete
%    \end{macrocode}
% \end{macro}    
%    
% For debugging purposes we define a switch that enables us to toggle
% on and off the loading of packages.
% 
%    \begin{macrocode}
\newif\ifloadpackages
\loadpackagestrue
%    \end{macrocode}
%    
% |\IfStyFileExists*| is just like |\IfFileExists|, except that it appends
% ".sty" to its first argument.  |\IfStyFileExists| is the same as
% |\IfStyFileExists*|, but it additionally adds its first argument to a list
% (|\missingpkgs|) and marks the document as incomplete (with
% |\completefalse|) if the |.sty| file doesn't exist.
% 
% \begin{macro}{\missingpkgs}
% \begin{macro}{\foundpkgs}
%   \begin{macrocode}
\newcommand{\missingpkgs}{}
\newcommand{\foundpkgs}{}
\newcommand{\if@sty@file@exists@star}[3]{%
  \ifloadpackages
    \IfFileExists{#1.sty}{#2}{#3}%
  \else
    #3%
  \fi
}
\newcommand{\if@sty@file@exists}[3]{%
  \ifloadpackages
    \IfFileExists{#1.sty}%
                 {#2\@cons\foundpkgs{{#1}}}%
                 {#3\completefalse\@cons\missingpkgs{{#1}}}%
  \else
    #3\completefalse\@cons\missingpkgs{{#1}}%
  \fi
}
\newcommand{\IfStyFileExists}{%
  \@ifstar{\if@sty@file@exists@star}{\if@sty@file@exists}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}

%
% \section{Maths}
%
% Althoug we cognisant that there are documents that do not use math
% and perhaps others that our selection of packages is inadequate, we
% offer a bundle of what we think will cover most of the cases.
% 
%    \begin{macrocode}
\RequirePackage{amsfonts}[2009/06/22]
\RequirePackage{amsmath}[2000/07/18] 
\RequirePackage{amssymb}[2002/01/22]
\RequirePackage{amsthm}[2002/01/22]
\RequirePackage{mathtools}
%    \end{macrocode}
% The package |stmaryrd| can be used for additional symbols. 
%    \begin{macrocode}
%\RequirePackage{stmaryrd}
%    \end{macrocode}
%    
% \subsection{xpfeil}
% The package |extpfeil| loads |stmaryd| with limited options
% we temporarily make |RequirePckage| a no-op to prevent
% LaTeX from complaining.
% 
%    \begin{macrocode}   
\newif\ifXPFEIL
\newcommand\XPFEIL{\pkgname{extpfeil}}
\IfStyFileExists{extpfeil}
  {\XPFEILtrue
   % extpfeil tries to do a \RequirePackage of stmaryrd with
   % conflicting options from what we used to load stmaryd.  We
   % therefore temporarily make \RequirePackage a no-op to prevent LaTeX
   % from complaining.
   \let\origRequirePackage=\RequirePackage
   \renewcommand*{\RequirePackage}[2][]{}
   \savesymbol{xlongequal}
   \savesymbol{xmapsto}
   \usepackage{extpfeil}
   \restoresymbol{XPFEIL}{xlongequal}
   \restoresymbol{XPFEIL}{xmapsto}
   \let\RequirePackage=\origRequirePackage
  }
  {}
%    \end{macrocode}
%      
% For calligraphic fonts we load the package |eucal|. The package is not actually needed, if 
% amsfonts are loaded? Consider removing.
%    \begin{macrocode}
\newif\ifEU
\IfStyFileExists{euscript}
  {\EUtrue\RequirePackage[mathcal]{euscript}
   \renewcommand{\mathcal}[1]{\mbox{\usefont{U}{eus}{m}{n}##1}}
  }
  {\let\CMcal\mathcal}
\RequirePackage{bm}
\RequirePackage{bbm}
\RequirePackage[Euler]{upgreek}
%    \end{macrocode}
%
% \subsection{Too many alphabets}
% 
%    \begin{macrocode} 
%%\newif\ifUPGR
%%\newcommand\UPGR{\pkgname{upgreek}}
%%\IfStyFileExists{upgreek}
%%  {% We're painfully low on math alphabets so we define upgreek's symbols
%%   % in text mode.
%%   \UPGRtrue
%%   \let\origDeclareSymbolFont=\DeclareSymbolFont
%%   \let\origDeclareMathSymbol=\DeclareMathSymbol
%%   \let\origSetSymbolFont=\SetSymbolFont
%%   \renewcommand{\DeclareSymbolFont}[5]{}
%%   \renewcommand{\DeclareMathSymbol}[4]{%
%%     \newcommand{##1}{{\usefont{U}{psy}{m}{n}\char##4}}%
%%   }
%%   \renewcommand{\SetSymbolFont}[6]{}
%%   \RequirePackage{upgreek}
%%   \DeclareFontFamily{U}{eur}{\skewchar\font'177}
%%   \DeclareFontShape{U}{eur}{m}{n}{%
%%     <-6> eurm5 <6-8> eurm7 <8-> eurm10}{}
%%   \let\DeclareSymbolFont=\origDeclareSymbolFont
%%   \let\DeclareMathSymbol=\origDeclareMathSymbol
%%   \let\SetSymbolFont=\origSetSymbolFont
%%  }
%%  {}
%    \end{macrocode}

% \section{Special Symbols}
% The Comprehensive LaTeX Symbols guide, has numerous symbols \ldots
% We use the \pkg{texcomp} package for special symbols, such as |\checkmark|
%    \begin{macrocode}
\RequirePackage{textcomp}
\RequirePackage{latexsym}
\newif\ifWASY
\newcommand\WASY{\pkgname{wasysym}}
\IfStyFileExists{wasysym}
  {\WASYtrue
   \savesymbol{lightning}
   \savesymbol{Box}
   \savesymbol{Diamond}
   \savesymbol{clock}
   \RequirePackage{wasysym}
   \restoresymbol{WASY}{lightning}
   \restoresymbol{WASY}{Box}
   \restoresymbol{WASY}{Diamond}
   \restoresymbol{WASY}{clock}
  }
  {}
\newif\ifPI
\newcommand\PI{\pkgname{pifont}}
\IfStyFileExists{pifont}
  {\PItrue\usepackage{pifont}}
  {}  
%    \end{macrocode}


%    
% marvosym underwent a major rewrite for the 2000/05/01 version, adding
% a large number of new symbols.  If it looks like we have only the
% older version, pretend we don't have it at all.
%    \begin{macrocode}  
\newif\ifMARV
\newcommand\MARV{\pkgname{marvosym}}
\IfStyFileExists*{marvosym}
  {\savesymbol{CheckedBox}
   \RequirePackage{marvosym}[2000/05/01]  % Major rewrite at this version.
   \global\MARVtrue
   \@ifundefined{Denarius}            % \Denarius is a newer symbol.
     {\global\MARVfalse}
     {}
   \@ifundefined{MVRightarrow}        % \Mvrightarrow is an even newer symbol.
     {\global\MARVfalse}
     {}
  }
  {}

%    \end{macrocode}
% 
%    \begin{macrocode}       
\newif\ifMAN
\newcommand\MAN{\pkgname{manfnt}}
\IfStyFileExists{manfnt}
  {\MANtrue\usepackage{manfnt}}
  {}

\newif\ifDING
\newcommand\DING{\pkgname{bbding}}
\IfStyFileExists{bbding}
  {\DINGtrue
   \savesymbol{Cross} \savesymbol{Square}
   \usepackage{bbding}
   \restoresymbol{ding}{Cross} \restoresymbol{ding}{Square}
  }
  {}
%    \end{macrocode}


%    
% \subsection{The \texttt{undertilde} package}      
%    \begin{macrocode}    
\newif\ifUTILD
\newcommand\UTILD{\pkgname{undertilde}}
\IfStyFileExists{undertilde}
  {\UTILDtrue\usepackage{undertilde}}
  {}
%    \end{macrocode}
%
% \begin{macro}{ifsym}
%    \begin{macrocode}
\newif\ifIFS
\newcommand\IFS{\pkgname{ifsym}}
\IfStyFileExists{ifsym}
  {\IFStrue
   \savesymbol{Letter} \savesymbol{Square} \savesymbol{Cross} \savesymbol{Sun}
   \savesymbol{TriangleUp} \savesymbol{TriangleDown} \savesymbol{Circle}
   \savesymbol{Lightning}
   \usepackage[alpine,clock,electronic,geometry,misc,weather]{ifsym}[2000/04/18]
   \restoresymbol{ifs}{Letter} \restoresymbol{ifs}{Square}
   \restoresymbol{ifs}{Cross} \restoresymbol{ifs}{Sun}
   \restoresymbol{ifs}{TriangleUp} \restoresymbol{ifs}{TriangleDown}
   \restoresymbol{ifs}{Circle} \restoresymbol{ifs}{Lightning}
   \DeclareRobustCommand{\allCubes}{%
     \Cube{1}~%
     \Cube{2}~%
     \Cube{3}~%
     \Cube{4}~%
     \Cube{5}~%
     \Cube{6}%
   }
  }
  {}  
  
%    \end{macrocode}
% \end{macro}
% The |ifsym| package can produce some fancy symbols such as \Cube{1},\Cube{6} etc. a cross \Cross
% a \TriangleUp      {\color{red}\TriangleDown}             
%  


% \section{Epigraphs and quotations}
% \subsection{Epigraphs}
%    \begin{macrocode}
\@ifundefined{epigraph}{%
   \RequirePackage{epigraph}
   %% Set up the epigraph to be a bit wider
  \setlength{\epigraphwidth}{8cm} 
  \setlength{\epigraphrule}{0pt}
  \newcommand{\theepigraph}[2]{\epigraphhead[30]{\epigraph{#1}{\textit{#2}}}}
}{\setlength{\epigraphwidth}{8cm} 
\setlength{\epigraphrule}{0pt}
\newcommand{\theepigraph}[2]{\epigraphhead[30]{\epigraph{#1}{\textit{#2}}}}%
}
%    \end{macrocode}
%    
% \subsection{Dropcaps}   
% We use the |lettrine| package of Daniel Flipo for drop caps. We do not pass any
% defaults and leave it to the configuration file. The lettrine configuration
% file is |lettrine.cfg|. We define a command \cs{dropcap} for soem settings
% that we think are acceptable.
%
%    \begin{macrocode}
\RequirePackage{lettrine}
\ifx\dropcap\undefined
  \def\dropcap#1#2{%
    \lettrine[lines=3, lraise=0.2, nindent=0em, slope=-.5em]{#1}{#2}
  }
\fi
%    \end{macrocode}
% 
% \section{Units and formatting of numbers and dates}
%    \begin{macrocode}
\RequirePackage{siunitx}
  \sisetup{fixed-exponent =0,
           scientific-notation = false}
\RequirePackage{numprint} % only for formatting large numbers?
%    \end{macrocode}
% 
% \section{filecontents}
% We ue the filecontents package, to open and write files on disk on the fly.
% See the sample manual as to how to use.
%    \begin{macrocode}
\RequirePackage{filecontents}
%    \end{macrocode}   
%    
% \section{Utilities for programming}
% The below packages offer some good utilities that you may find useful, if you are
% going to program and develop additional macros.
% |\strictpagecheck| can be used effectively for a number of situations, where you need to 
% know if you are on an odd or even page.
%    \begin{macrocode}
\RequirePackage{changepage}    
\RequirePackage{keyval}
\RequirePackage{ifmtarg}
\RequirePackage{fp}
\RequirePackage{ifthen}
\RequirePackage{xstring}
%% \RequirePackage{cool, coolstr} conflicts to be resolved.
\RequirePackage{etoolbox}
\RequirePackage{listings}
\RequirePackage{tikz}
%    \end{macrocode}
%    
% \section{Code Typesetting}
% 	A lot of users use LaTeX for computer related code we include all the necessary
% 	code to use the |listings| package. We also provide some predefined environments.
% 	
% 	
%    \begin{macrocode}
\RequirePackage[listings,theorems]{tcolorbox}
\lstdefinelanguage{Verse}%
{morekeywords={poemtitle, poemtoc, versewidth, vin, poemlines,poemtitlefont, 
ProvidesClass,IfFileExists,RequirePackage,ifthenelse,chapter,includegraphics, newarray,readarray,of
}}

\lstloadlanguages{[LaTeX]TeX, [primitive]TeX, Verse}

\lstset{language={[LaTeX]TeX},
      escapeinside={{(*@}{@*)}}, 
       numbers=left, gobble=0,
       stepnumber=1,numbersep=5pt, 
       numberstyle={\footnotesize\color{gray}},firstnumber=last,
       breaklines=true,
       framesep=5pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
       stringstyle={\color{orange}\footnotesize},
       commentstyle=\color{black},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       showspaces=false, 
       xleftmargin=0pt,
       xrightmargin=5pt,
       aboveskip=3pt plus1pt minus1pt, 
       belowskip=7pt plus1pt minus1pt,  
       backgroundcolor=\color{theshade}
}
%    \end{macrocode}
%	
%	
% \begin{environment}{teX}	
% 	The environment |\begin{TeX}..\end{TeX}| provides a listings environment
% 	for typesetting, either TeX or LaTeX code.
% 	
%    \begin{macrocode}
\lstnewenvironment{teX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      breaklines=true,
      framesep=5pt,
      basicstyle=\normalsize\ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\color{blue},
      stringstyle=\color{orange},
      stringstyle={\color{gray!90}\footnotesize},
	 commentstyle={\color{gray!90}\footnotesize},
	 rulecolor=\color{theshade},
      breakatwhitespace=true,
	 xleftmargin=0pt,
	 xrightmargin=5pt,
	 aboveskip=\medskipamount,
	 belowskip=\medskipamount,
      backgroundcolor=\color{gray!3}, #1
}}
{}


\lstnewenvironment{teXX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      breaklines=true,
      framesep=5pt,
      basicstyle=\normalsize\ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\color{blue},
      stringstyle=\color{maroon},
	 commentstyle=\color{black},
	 rulecolor=\color{gray!10},
      breakatwhitespace=true,
	 xleftmargin=0pt,
	 xrightmargin=5pt,
	 aboveskip=\medskipamount,
	 belowskip=\medskipamount,
      backgroundcolor=\color{gray!10}, #1
}}
{}

%% Emphasis
\renewcommand{\ttdefault}{cmtt}			% prefer old tt font
\newcommand\emphasis[2][red]{\lstset{emph={write,void,writeln,#2},
   emphstyle={\ttfamily\textcolor{#1}}}}%
\lstnewenvironment{teXXX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      escapeinside={{(*@}{@*)}},
      breaklines=true,
      framesep=5pt,
      basicstyle=\ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\textcolor{blue},
      stringstyle=\color{orange},
	 commentstyle=\color{black},
	 rulecolor=\color{gray!10},
      breakatwhitespace=true,
      showspaces=false,  % shows spacing symbol
	 xleftmargin=0pt,
	 xrightmargin=5pt,
	 aboveskip=0pt, % compact the code looks ugly in type
	 belowskip=0pt,  % user responsible to insert any skips
      backgroundcolor=\color{gray!15}, #1
}}
{}
%
%    \end{macrocode}
% \end{environment}    
%    
%	
% \begin{macro}{\continuelinenumber} 
% \begin{macro}{\startnumberat} 
%  The macro \cs{continueLineNumber}, provides a command
%  to start the next block of code with the code numbers continuing.
%  This requires the |listings| which is already included.
%  
%    \begin{macrocode}
% Always I forget this so I created some aliases
\newcommand\continuelinenumber{\lstset{firstnumber=last}}
\newcommand\startlineat[1]{\lstset{firstnumber=#1}}
\let\numberlineat\startlineat
\let\startnumberat\numberlineat
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \subsection{algorithms}
% 
% This package must always be loaded after |hyperref|
%
%    \begin{macrocode} 
\newif\ifALGORITHM
\@ifpackageloaded{hyperref}{%
  %%\RequirePackage{algorithms}
 }
 {\typeout{Algorithm loaded}}
\RequirePackage{algorithm2e} 
%    \end{macrocode}
%     
% \section{Common packages for structuring documents}
% The structuring commands, should ideally be loaded by the class. In case the class
% does not loaded them. We use the \pkg{multicol}, for multiple columns.
%    \begin{macrocode}
\RequirePackage{multicol}
%\RequirePackage[toc]{multitoc}
%    \end{macrocode} 
%    
% \section{Common packages for Typography}
% We load |ragged2e| package for typography
% \begin{macro}{ragged2e}
% This package by Martin Schr\"oeder provides new commands and environments for
% setting ragged text which are easy to configure to allow hyphenation. The
% way Martin explains it, the main purpose of the package is to restore the
% plain TEX definitions which have been changed by LaTex2e. On the way it
% defines a number of useful environments. The package also loads the
% |footmisc| package if loaded with the option |footnotes|. Hm.. It also
% loads the package |everysel|. More fun. Passing of options, should be in 
% a settings file? 
% 
%
%
%    \begin{macrocode}
\newif\ifRAGGEDTWOE
\newif\ifEVERYSEL
\newif\ifFOOTMISC
\PassOptionsToPackage{ragged2e}{footnotes,raggedrightboxes}
\RequirePackage{ragged2e}
%    \end{macrocode}
% \end{macro}
% \subsection{Highlighting}
%    \begin{macrocode}
\RequirePackage{soul}
\RequirePackage{ulem}
%    \end{macrocode}  
%
% \section{Miscellaneous}
%
% We include here everything that does not fit into the other categories.
% 
%    \begin{macrocode} 
\newif\ifCCLIC
\newcommand\CCLIC{\pkgname{cclicenses}}
\IfStyFileExists{cclicenses}
  {\CCLICtrue
   \usepackage{cclicenses}
   % cclicenses doesn't get along with textcomp's remapping of
   % \textcircled to the TS1 font encoding.  Mapping it back doesn't
   % _seem_ to cause any problems.
   \DeclareTextAccentDefault{\textcircled}{OMS}
  }
  {}
%    \end{macrocode}
%  
% \subsection{Ornaments}      
% 
% Fourier defines a lot of math symbols, but we care about only a few of
% them.  Hence, we load only the fourier-orns package and manually
% define everything else as text-mode symbols.
% 
%    \begin{macrocode} 
\newif\ifFOUR
\newcommand\FOUR{\pkgname{fourier}}
\IfStyFileExists{fourier}
  {\FOURtrue
   \usepackage{fourier-orns}
   % Define single-glyph symbols.
   \DeclareFontEncoding{FMS}{}{}
   \DeclareFontSubstitution{FMS}{futm}{m}{n}
   \DeclareFontEncoding{FML}{}{}
   \DeclareFontSubstitution{FML}{futmi}{m}{it}
   \newcommand{\fourierdef}[6]{%
     \DeclareRobustCommand{##1}{{\usefont{##2}{##3}{##4}{##5}\char##6}}}
   \fourierdef{\parallelslant}{FMS}{futm}{m}{n}{134}
   \fourierdef{\nparallelslant}{FMS}{futm}{m}{n}{143}
   \fourierdef{\FOURrho}{FML}{futmi}{m}{it}{26}
   \fourierdef{\FOURvarrho}{FML}{futmi}{m}{it}{37}
   \fourierdef{\varvarrho}{FML}{futmi}{m}{it}{129}
   \fourierdef{\FOURpi}{FML}{futmi}{m}{it}{25}
   \fourierdef{\FOURvarpi}{FML}{futmi}{m}{it}{36}
   \fourierdef{\varvarpi}{FML}{futmi}{m}{it}{131}
   \fourierdef{\FOURpartial}{FML}{futmi}{m}{it}{64}
   \fourierdef{\varpartialdiff}{FML}{futmi}{m}{it}{130}
   \fourierdef{\FOURtexteuro}{TS1}{futx}{m}{n}{191}

   % Fake a math accent with text-mode commands.
   \DeclareRobustCommand{\FOURfakewidetopaccent}[5]{%
     \setbox0=\hbox{\ensuremath{##1}}%
     \setbox1=\hbox{\ensuremath{abc}}%
     \leavevmode
     \ifdim\wd0<\wd1
       \kern1pt
       \rlap{\raisebox{##2}{\makebox[\wd0]{\usefont{FMX}{futm}{m}{n}\char##3}}}%
       \kern-0.1em
       \box0
     \else
       \rlap{\raisebox{##4}{\makebox[\wd0]{\usefont{FMX}{futm}{m}{n}\char##5}}}%
       \box0
     \fi
   }

   % Manually define Fourier's extensible accents.  Note that we don't
   % bother trying to use Fourier's \mathring to construct the
   % \FOURwidering symbol.
   \DeclareFontEncoding{FMX}{}{}
   \DeclareFontSubstitution{FMX}{futm}{m}{n}
   \DeclareRobustCommand{\FOURwidearc}[1]{%
     \FOURfakewidetopaccent{##1}{0ex}{216}{0.5ex}{217}}
   \DeclareRobustCommand{\FOURwideOarc}[1]{%
     \FOURfakewidetopaccent{##1}{0ex}{228}{0.5ex}{229}}
   \DeclareRobustCommand{\FOURwideparen}[1]{%
     \FOURfakewidetopaccent{##1}{0ex}{148}{0.5ex}{150}}
   \DeclareRobustCommand{\FOURwidering}[1]{\overset{\smash{\vbox to .2ex{%
     \hbox{$\mathring{}$}}}}{\FOURwideparen{##1}}}

   % Manually define Fourier's variable-sized delimiters.
   \newcommand{\fouriercdef}[6]{%
     \DeclareRobustCommand{##1}{%
       \textvcenter{\usefont{##2}{##3}{##4}{##5}\char##6}}}
   \fouriercdef{\FOURtllbracket}{FMX}{futm}{m}{n}{133}
   \fouriercdef{\FOURdllbracket}{FMX}{futm}{m}{n}{139}
   \fouriercdef{\FOURtrrbracket}{FMX}{futm}{m}{n}{134}
   \fouriercdef{\FOURdrrbracket}{FMX}{futm}{m}{n}{140}
   \newcommand*{\FOURverticals}[1]{%
     \vbox{%
       \baselineskip=-\maxdimen
       \lineskiplimit=\maxdimen
       \lineskip=0pt%
       \usefont{FMX}{futm}{m}{n}%
       \ialign{####\cr##1}%
     }%
   }
   \DeclareRobustCommand{\FOURtVERT}{%
     \raisebox{0.5ex}{\textvcenter{\FOURverticals{\char147\cr\char147\cr}}}}
   \DeclareRobustCommand{\FOURdVERT}{%
     \raisebox{0.5ex}{\textvcenter{\FOURverticals{\char147\cr\char147\cr\char147\cr\char147\cr}}}}
  }
  {}
%    \end{macrocode} 
%
%    \begin{macrocode}
\RequirePackage{dirtree}
%    \end{macrocode}
%    
% \section{Archaic Symbols}     
%
%    \begin{macrocode}  
\newif\ifLINA
\newcommand\LINA{\pkgname{linearA}}
\IfStyFileExists{linearA}
  {\LINAtrue\usepackage{linearA}}
  {}

\newif\ifLINB
\newcommand\LINB{\pkgname{linearb}}
%\IfStyFileExists{linearb}
%  {\LINBtrue\usepackage{linearb}}
%  {}

\newif\ifCYPR
\newcommand\CYPR{\pkgname{cypriot}}
%\IfStyFileExists{cypriot}
%  {\CYPRtrue\usepackage{cypriot}}
%  {}

\newif\ifSARAB
\newcommand\SARAB{\pkgname{sarabian}}
%\IfStyFileExists{sarabian}
%  {\SARABtrue\usepackage{sarabian}}
%  {}

% Cuneiform -- not sure if this is appropriate for the list so it's
% commented out for now.
\newif\ifPRSN
\newcommand\PRSN{\pkgname{oldprsn}}
%\IfStyFileExists{oldprsn}
%  {\PRSNtrue\usepackage{oldprsn}}
%  {}

% Cuneiform -- not sure if this is appropriate for the list so it's
% commented out for now.
\newif\ifUGAR
\newcommand\UGAR{\pkgname{ugarite}}
%\IfStyFileExists{ugarite}
%  {\UGARtrue\usepackage{ugarite}}
%  {}
%  
%    \end{macrocode}
% \section{Commonly used macros}     

%    \begin{macrocode}
\newcommand{\hangleft}[1]{\makebox[0pt][r]{#1}}

\def\ctan#1{\textcolor{green}{\href{http://www.ctan.org/tex-archive/help/Catalogue/entries/#1.html}{#1}\protect\sidenote{\protect\url{http://www.ctan.org/tex-archive/help/Catalogue/entries/#1.html}}}
\index{Packages!#1} }

\def\graybox#1{\par\medskip
 \noindent\colorbox{black!7}{\parbox{0.98\textwidth}{\noindent#1}}\par\medskip}
%% Special commands for display
\long\def\bottomline{\medskip
\noindent\rule{\linewidth}{0.4pt}\medskip}

\long\def\topline{\par\medskip
\noindent\rule{\linewidth}{0.4pt}\medskip}
%    \end{macrocode}

% Shorthand for referencing figures and other common elements. This ensures that
% all referencing will be consistent in capitalization. In a future version I will provide
% a setting command.
%    \begin{macrocode}
\newcommand{\fref}[1]{Figure~\ref{#1}}
\newcommand{\tref}[1]{Table~\ref{#1}}
\newcommand{\eref}[1]{Equation~\ref{#1}}
\newcommand{\cref}[1]{Chapter~\ref{#1}}
\newcommand{\sref}[1]{Section~\ref{#1}}
\newcommand{\aref}[1]{Appendix~\ref{#1}}
%    \end{macrocode}
%\subsection{meta}
% This has been lifted from |doc|
% \begin{macro}{\meta}
% \changes{v1.4t}{1989/04/24}{Macro added.}
% \changes{v1.5w}{1990/02/03}{Breaks at space allowed.}
% \changes{v1.6a}{1990/05/24}{Extra space bug corrected.}
%    The |\meta| macro is a bit tricky. We want to allow line
%    breaks at blanks in the argument but we don't want a break
%    in between. In the past this was done by defining |\meta| in a way that a
%    \verb*+ + is active when the argument is scanned. Words are then
%    scanned into |\hbox|es. The active \verb*+ + will end the
%    preceding |\hbox| add an ordinary space and open a new
%    |\hbox|. In this way breaks are only possible at spaces.  The
%    disadvantage of this method was that |\meta| was neither robust
%    nor could it be |\protect|ed. The new implementation  fixes this
%    problem by defining |\meta| in a radically different way: we
%    prevent hypenation by defining a |\language| which has no
%    patterns associated with it and use this to typeset the words
%    within the angle brackets.
% \changes{v2.0i}{2000/05/21}{New implementation (pr/3170)}
%    \begin{macrocode}
\ifx\l@nohyphenation\undefined
  \newlanguage\l@nohyphenation
\fi
%    \end{macrocode}
%    
%    \begin{macrocode}
\DeclareRobustCommand\meta[1]{%
%    \end{macrocode}
%    Since the old implementation of |\meta| could be used in math we
%    better ensure that this is possible with the new one as
%    well. So we use |\ensuremath| around |\langle| and
%    |\rangle|. However this is not enough: if |\meta@font@select|
%    below expands to |\itshape| it will fail if used in math
%    mode. For this reason we hide the whole thing inside an
%    |\nfss@text| box in that case.
% \changes{v2.0l}{2000/06/10}{Fixing changes for (pr/3170)}
%    \begin{macrocode}
     \ensuremath\langle
     \ifmmode \expandafter \nfss@text \fi
     {%
      \meta@font@select
%    \end{macrocode}
%    Need to keep track of what we changed just in case the user
%    changes font inside the argument so we store the font explicitly.
% \changes{v2.0m}{2000/07/04}{More fixing changes for (pr/3170)}
%    \begin{macrocode}
      \edef\meta@hyphen@restore
        {\hyphenchar\the\font\the\hyphenchar\font}%
      \hyphenchar\font\m@ne
      \language\l@nohyphenation
      #1\/%
      \meta@hyphen@restore
     }\ensuremath\rangle
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\meta@font@select}
% \changes{v2.0k}{2000/05/26}{Macro added (pr/3170)}
%    Maske font used inside |\meta| customizable.
%    \begin{macrocode}
\def\meta@font@select{\itshape}
%    \end{macrocode}
% \end{macro}
% \section{Floats settings}                    
% Use Donald Arseneau's improved float parameters. I am not too sure when this was first referenced
% once I find it, will provide a citation and or a link.
% 
%    \begin{macrocode}
\renewcommand{\topfraction}{.85}
\renewcommand{\bottomfraction}{.7}
\renewcommand{\textfraction}{.15}
\renewcommand{\floatpagefraction}{.66}
\renewcommand{\dbltopfraction}{.66}
\renewcommand{\dblfloatpagefraction}{.66}
\setcounter{topnumber}{9}
\setcounter{bottomnumber}{9}
\setcounter{totalnumber}{20}
\setcounter{dbltopnumber}{9}
%    \end{macrocode}
%	
%\section{Hyphenation}
% The below have been mostly lifted from TUGBoat class. I would appreciate
% any additions. See also \url{http://ctan.um.ac.ir/info/digests/tugboat/hyphenex/tb0hyf.pdf}
%
% Hyphenation exceptions for US English,
% based on hyphenation exception log articles in TUGboat.
%
% Copyright 2008 TeX Users Group.
% You may freely use, modify and/or distribute this file.
%
% Please contact the TUGboat editorial staff <tugboat@tug.org>
% for corrections and omissions.
% We also assume that the class has provided some decent hyphenation rules
% I acknowledge that this might not be totally satisfactory and one needs
% to think of a better way in a future version.
%
% \index{hyphenation}
%    \begin{macrocode}
\ifx\tubomithyphenations\@thisisundefined
\hyphenation{%
  acad-e-my
  acad-e-mies
  ac-cu-sa-tive
  acro-nym
  acro-nyms
  acryl-amide
  acryl-amides
  acryl-alde-hyde
  acu-punc-ture
  acu-punc-tur-ist
  add-a-ble
  add-i-ble
  adren-a-line
  aero-space
  af-ter-thought
  af-ter-thoughts
  agron-o-mist
  agron-o-mists
  al-ge-bra-i-cal-ly
  am-phet-a-mine
  am-phet-a-mines
  anach-ro-nism
  anach-ro-nis-tic
  an-a-lyse
  an-a-lysed
  analy-ses
  analy-sis
  an-eu-rysm
  an-eu-rysms
  an-eu-rys-mal
  an-iso-trop-ic
  an-iso-trop-i-cal-ly
  an-isot-ro-pism
  an-isot-ropy
  anom-aly
  anom-alies
  anti-deriv-a-tive
  anti-deriv-a-tives
  anti-holo-mor-phic
  an-tin-o-my
  an-tin-o-mies
  anti-nu-clear
  anti-nu-cle-on
  anti-rev-o-lu-tion-ary
  apoth-e-o-ses
  apoth-e-o-sis
  ap-pen-di-ces
  ap-pen-dix
  ap-pen-dixes
  ar-chi-me-dean
  ar-chi-pel-ago
  ar-chi-pel-a-gos
  ar-chive
  ar-chives
  ar-chiv-ing
  ar-chiv-ist
  ar-chiv-ists
  ar-che-typ-al
  ar-che-type
  ar-che-types
  ar-che-typ-i-cal
  arc-tan-gent
  arc-tan-gents
  as-sign-a-ble
  as-sign-or
  as-sign-ors
  as-sist-ant
  as-sist-ance
  as-sist-ant-ship
  as-sist-ant-ships
  asymp-to-matic
  as-ymp-tot-ic
  asyn-chro-nous
  ath-er-o-scle-ro-sis
  at-mos-phere
  at-mos-pheres
  at-tri-bute
  at-trib-uted
  at-trib-ut-able
  au-to-ma-tion
  au-tom-a-ton
  au-tom-a-ta
  auto-num-ber-ing
  au-ton-o-mous
  auto-re-gres-sion
  auto-re-gres-sive
  auto-round-ing
  av-oir-du-pois
  band-lead-er
  band-lead-ers
  bank-rupt
  bank-rupts
  bank-rupt-cy
  bank-rupt-cies
  bar-onies
  base-line-skip
  ba-thym-e-try
  bathy-scaphe
  bean-ies
  be-drag-gle
  be-drag-gled
  bed-rock
  be-dwarf
  be-dwarfs
  be-hav-iour
  be-hav-iours
  bevies
  bib-lio-graph-i-cal
  bib-li-og-ra-phy-style
  bib-units
  bi-dif-fer-en-tial
  big-gest
  bill-able
  bio-math-e-mat-ics
  bio-med-i-cal
  bio-med-i-cine
  bio-rhythms
  bio-weap-ons
  bio-weap-on-ry
  bit-map
  bit-maps
  bland-er
  bland-est
  blind-er
  blind-est
  blondes
  blue-print
  blue-prints
  bo-lom-e-ter
  bo-lom-e-ters
  book-sell-er
  book-sell-ers
  bool-ean
  bool-eans
  bor-no-log-i-cal
  bot-u-lism
  brusquer
  buf-fer
  buf-fers
  bun-gee
  bun-gees
  busier
  busi-est
  bussing
  butted
  buzz-word
  buzz-words
  ca-coph-o-ny
  ca-coph-o-nies
  call-er
  call-ers
  cam-era-men
  cart-wheel
  cart-wheels
  ca-tarrhs
  cat-a-stroph-ic
  cat-a-stroph-i-cally
  cat-e-noid
  cat-e-noids
  cau-li-flow-er
  chap-ar-ral
  char-treuse
  chemo-ther-apy
  chemo-ther-a-pies
  chloro-meth-ane
  chloro-meth-anes
  cho-les-teric
  cig-a-rette
  cig-a-rettes
  cinque-foil
  co-asso-cia-tive
  coch-leas
  coch-lear
  co-designer
  co-designers
  co-gnac
  co-gnacs
  co-ker-nel
  co-ker-nels
  col-lin-ea-tion
  col-umns
  com-par-and
  com-par-ands
  com-pen-dium
  com-po-nent-wise
  comp-trol-ler
  comp-trol-lers
  com-put-able
  com-put-abil-ity
  con-form-able
  con-form-ist
  con-form-ists
  con-form-ity
  con-ge-ries
  con-gress
  con-gresses
  con-struc-ti-ble
  con-struc-ti-bil-ity
  con-trib-ute
  con-trib-utes
  con-trib-uted
  copy-right-able
  co-re-la-tion
  co-re-la-tions
  co-re-li-gion-ist
  co-re-li-gion-ists
  co-re-op-sis
  co-re-spon-dent
  co-re-spon-dents
  co-se-cant
  co-semi-sim-ple
  co-tan-gent
  cour-ses
  co-work-er
  co-work-ers
  crank-case
  crank-shaft
  croc-o-dile
  croc-o-diles
  cross-hatch
  cross-hatched
  cross-hatch-ing
  cross-over
  cryp-to-gram
  cryp-to-grams
  cuff-link
  cuff-links
  cu-nei-form
  cus-tom-iz-a-ble
  cus-tom-ize
  cus-tom-izes
  cus-tom-ized
  cy-ber-virus
  cy-ber-viruses
  cy-ber-wea-pon
  cy-ber-wea-pons
  dachs-hund
  dam-sel-fly
  dam-sel-flies
  dactyl-o-gram
  dactyl-o-graph
  data-base
  data-bases
  data-path
  data-paths
  date-stamp
  date-stamps
  de-allo-cate
  de-allo-cates
  de-allo-cated
  de-allo-ca-tion
  de-allo-ca-tions
  de-clar-able
  de-fin-i-tive
  de-lec-ta-ble
  demi-semi-qua-ver
  demi-semi-qua-vers
  de-moc-ra-tism
  demos
  der-i-va-tion
  der-i-va-tions
  der-i-va-tion-al
  de-riv-a-tive
  de-riv-a-tives
  dia-lec-tic
  dia-lec-tics
  dia-lec-ti-cian
  dia-lec-ti-cians
  di-chloro-meth-ane
  dif-fract
  dif-fracts
  dif-frac-tion
  dif-frac-tions
  direr
  dire-ness
  dis-par-and
  dis-par-ands
  dis-traught-ly
  dis-trib-ut-able
  dis-trib-ute
  dis-trib-utes
  dis-trib-uted
  dis-trib-u-tive
  dou-ble-space
  dou-ble-spaced
  dou-ble-spac-ing
  doll-ish
  drift-age
  driv-ers
  drom-e-dary
  drom-e-daries
  du-op-o-list
  du-op-o-lists
  du-op-oly
  dys-lexia
  dys-lec-tic
  east-end-ers
  eco-sys-tem
  eco-sys-tems
  eco-nom-ics
  econ-o-mies
  econ-o-mist
  econ-o-mists
  ei-gen-class
  ei-gen-classes
  ei-gen-val-ue
  ei-gen-val-ues
  electro-mechan-i-cal
  electro-mechano-acoustic
  elit-ist
  elit-ists
  en-dos-copies
  en-dos-copy
  en-tre-pre-neur
  en-tre-pre-neurs
  en-tre-pre-neur-ial
  ep-i-neph-rine
  eps-to-pdf
  equi-vari-ant
  equi-vari-ance
  er-go-nom-ic
  er-go-nom-ics
  er-go-nom-i-cally
  es-sence
  es-sences
  eth-ane
  eth-yl-am-ine
  eth-yl-ate
  eth-yl-ated
  eth-yl-ene
  ethy-nyl
  ethy-nyl-a-tion
  eu-sta-chian
  ever-si-ble
  evert
  everts
  evert-ed
  evert-ing
  ex-quis-ite
  ex-tra-or-di-nary
  fall-ing
  fermi-ons
  figu-rine
  figu-rines
  fi-nite-ly
  fla-gel-lum
  fla-gel-la
  flam-ma-bles
  fledg-ling
  flow-chart
  flow-charts
  fluoro-car-bon
  fluor-os-copies
  fluor-os-copy
  for-mi-da-ble
  for-mi-da-bly
  for-syth-ia
  forth-right
  free-loader
  free-loaders
  friend-lier
  friend-li-est
  fri-vol-ity
  fri-vol-i-ties
  friv-o-lous
  front-end
  front-ends
  ga-lac-tic
  gal-axy
  gal-ax-ies
  gas-om-e-ter
  ge-o-des-ic
  ge-o-det-ic
  geo-met-ric
  geo-met-rics
  ge-o-strophic
  geo-ther-mal
  ge-ot-ro-pism
  gno-mon
  gno-mons
  grand-uncle
  grand-uncles
  griev-ance
  griev-ances
  griev-ous
  griev-ous-ly
  group-like
  hair-style
  hair-styles
  hair-styl-ist
  hair-styl-ists
  half-life
  half-lives
  half-space
  half-spaces
  half-way
  har-bin-ger
  har-bin-gers
  har-le-quin
  har-le-quins
  hatch-eries
  he-lio-pause
  he-lio-trope
  hemi-demi-semi-qua-ver
  hemi-demi-semi-qua-vers
  he-mo-glo-bin
  he-mo-phil-ia
  he-mo-phil-iac
  he-mo-phil-iacs
  hemo-rhe-ol-ogy
  he-pat-ic
  he-pat-ica
  her-maph-ro-dite
  her-maph-ro-dit-ic
  he-roes
  hexa-dec-i-mal
  holo-deck
  holo-decks
  ho-lo-no-my
  ho-meo-mor-phic
  ho-meo-mor-phism
  ho-meo-stat-ic
  ho-meo-stat-ics
  ho-meo-sta-sis
  ho-mo-thetic
  horse-rad-ish
  hot-bed
  hot-beds
  hounds-teeth
  hounds-tooth
  hy-dro-ther-mal
  hy-per-elas-tic-ity
  hy-po-elas-tic-ity
  hy-po-thal-a-mus
  ideals
  ideo-graphs
  idio-syn-crasy
  idio-syn-cra-sies
  idio-syn-cratic
  idio-syn-crat-i-cal-ly
  ig-nit-er
  ig-nit-ers
  ig-ni-tor
  ignore-spaces
  il-li-quid
  il-li-quid-ity
  im-ped-ance
  im-ped-ances
  in-du-bi-ta-ble
  in-fin-ite-ly
  in-fin-i-tes-i-mal
  in-fra-struc-ture
  in-fra-struc-tures
  input-enc
  in-stall-er
  in-stall-ers
  in-teg-rity
  in-ter-dis-ci-pli-nary
  in-ter-ga-lac-tic
  in-ter-view-ee
  in-ter-view-ees
  in-utile
  in-util-i-ty
  ir-re-duc-ible
  ir-re-duc-ibly
  ir-rev-o-ca-ble
  iso-geo-met-ric
  iso-geo-met-rics
  iso-ther-mal
  isot-ropy
  iso-trop-ic
  itin-er-ary
  itin-er-ar-ies
  je-re-mi-ads
  key-note
  key-notes
  key-stroke
  key-strokes
  kiln-ing
  lac-i-est
  lam-en-ta-ble
  land-scap-er
  land-scap-ers
  lar-ce-n
  lar-ce-ny
  lar-ce-nies
  lar-ce-nist
  leaf-hop-per
  leaf-hop-pers
  let-ter-spaces
  let-ter-spaced
  let-ter-spac-ing
  leu-ko-cyte
  leu-ko-cytes
  life-span
  life-spans
  life-style
  life-styles
  light-weight
  lim-ou-sines
  line-backer
  line-spacing
  li-on-ess
  li-quid-ity
  lith-o-graphed
  lith-o-graphs
  lo-bot-omy
  lo-bot-om-ize
  loges
  long-est
  look-ahead
  lo-quac-ity
  love-struck
  macro-eco-nomic
  macro-eco-nomics
  macro-econ-omy
  make-in-dex
  mal-a-prop-ism
  mal-a-prop-isms
  man-slaugh-ter
  man-u-script
  man-u-scripts
  mar-gin-al
  math-e-ma-ti-cian
  math-e-ma-ti-cians
  mattes
  med-ic-aid
  medi-ocre
  medi-oc-ri-ties
  mega-fau-na
  mega-fau-nal
  mega-lith
  mega-liths
  meta-bol-ic
  me-tab-o-lism
  me-tab-o-lisms
  me-tab-o-lite
  me-tab-o-lites
  meta-form
  meta-forms
  meta-lan-guage
  meta-lan-guages
  meta-phor-ic
  meta-sta-bil-ity
  meta-stable
  meta-table
  meta-tables
  meth-am-phet-a-mine
  meth-ane
  meth-od
  meth-yl-am-mo-nium
  meth-yl-ate
  meth-yl-ated
  meth-yl-a-tion
  meth-yl-ene
  me-trop-o-lis
  me-trop-o-lises
  met-ro-pol-i-tan
  met-ro-pol-i-tans
  micro-eco-nomic
  micro-eco-nomics
  micro-econ-omy
  micro-en-ter-prise
  micro-en-ter-prises
  mi-cro-fiche
  mi-cro-fiches
  micro-organ-ism
  micro-organ-isms
  mi-cro-struc-ture
  mill-age
  mil-li-liter
  mimeo-graphed
  mimeo-graphs
  mim-ic-ries
  mine-sweeper
  mine-sweepers
  min-is
  mini-sym-po-sium
  mini-sym-po-sia
  mi-nut-er
  mi-nut-est
  mis-chie-vous-ly
  mi-sers
  mi-sog-a-my
  mne-mon-ic
  mne-mon-ics
  mod-el-ling
  mol-e-cule
  mol-e-cules
  mon-archs
  money-len-der
  money-len-ders
  mono-chrome
  mono-en-er-getic
  mon-oid
  mon-oph-thong
  mon-oph-thongs
  mono-pole
  mono-poles
  mo-nop-oly
  mono-space
  mono-spaced
  mono-spacing
  mono-spline
  mono-splines
  mono-strofic
  mo-not-o-nies
  mo-not-o-nous
  mo-ron-ism
  mos-qui-to
  mos-qui-tos
  mos-qui-toes
  mud-room
  mud-rooms
  mul-ti-fac-eted
  mul-ti-plic-able
  mul-ti-plic-ably
  multi-user
  name-space
  name-spaces
  neo-fields
  neo-nazi
  neo-nazis
  neph-ews
  neph-rite
  neph-ritic
  new-est
  news-let-ter
  news-let-ters
  nil-po-tent
  nitro-meth-ane
  node-list
  node-lists
  no-name
  non-ar-ith-met-ic
  non-emer-gency
  non-equi-vari-ance
  none-the-less
  non-euclid-ean
  non-iso-mor-phic
  non-pseudo-com-pact
  non-smooth
  non-uni-form
  non-uni-form-ly
  non-zero
  nor-ep-i-neph-rine
  not-with-stand-ing
  nu-cleo-tide
  nu-cleo-tides
  nut-crack-er
  nut-crack-ers
  oer-steds
  off-line
  off-load
  off-loads
  off-loaded
  oli-gop-o-list
  oli-gop-o-lists
  oli-gop-oly
  oli-gop-ol-ies
  om-ni-pres-ent
  om-ni-pres-ence
  ono-mat-o-poe-ia
  ono-mat-o-po-et-ic
  op-er-and
  op-er-ands
  orang-utan
  orang-utans
  or-tho-don-tist
  or-tho-don-tists
  or-tho-ker-a-tol-ogy
  ortho-nitro-toluene
  over-view
  over-views
  ox-id-ic
  pad-ding
  page-rank
  pain-less-ly
  pal-ette
  pal-ettes
  pa-rab-ola
  par-a-bol-ic
  pa-rab-o-loid
  par-a-digm
  par-a-digms
  para-chute
  para-chutes
  para-di-methyl-benzene
  para-fluoro-toluene
  para-graph-er
  para-le-gal
  par-al-lel-ism
  para-mag-net-ism
  para-medic
  para-methyl-anisole
  pa-ram-e-tri-za-tion
  pa-ram-e-trize
  para-mil-i-tary
  para-mount
  path-o-gen-ic
  peev-ish
  peev-ish-ness
  pen-ta-gon
  pen-ta-gons
  pe-tro-le-um
  phe-nol-phthalein
  phe-nom-e-non
  phenyl-ala-nine
  phi-lat-e-list
  phi-lat-e-lists
  pho-neme
  pho-nemes
  pho-ne-mic
  phos-phor-ic
  pho-to-graphs
  pho-to-off-set
  phtha-lam-ic
  phthal-ate
  phthi-sis
  pic-a-dor
  pic-a-dors
  pipe-line
  pipe-lines
  pipe-lin-ing
  pi-ra-nhas
  placa-ble
  plant-hop-per
  plant-hop-pers
  pla-teau
  pla-teaus
  pleas-ance
  plug-in
  plug-ins
  pol-ter-geist
  poly-an-dr
  poly-an-dry
  poly-an-drous
  poly-dac-tyl
  poly-dac-tyl-lic
  poly-ene
  poly-eth-yl-ene
  po-lyg-a-mist
  po-lyg-a-mists
  polyg-on-i-za-tion
  po-lyg-y-n
  po-lyg-y-ny
  po-lyg-y-nous
  pol-yp
  pol-yps
  po-lyph-o-n
  po-lyph-o-ny
  po-lyph-o-nous
  poly-phon-ic
  poly-styrene
  pome-gran-ate
  poro-elas-tic
  por-ous
  por-ta-ble
  post-am-ble
  post-am-bles
  post-hu-mous
  post-script
  post-scripts
  pos-tur-al
  pre-am-ble
  pre-am-bles
  pre-loaded
  pre-par-ing
  pre-print
  pre-prints
  pre-proces-sor
  pre-proces-sors
  pres-ent-ly
  pre-split-ting
  pre-wrap
  pre-wrapped
  priest-esses
  pret-ty-prin-ter
  pret-ty-prin-ting
  pro-ce-dur-al
  process
  pro-cur-ance
  prog-e-nies
  prog-e-ny
  pro-gram-mable
  pro-kary-ote
  pro-kary-otes
  pro-kary-ot-ic
  prom-i-nent
  pro-mis-cu-ous
  prom-is-sory
  prom-ise
  prom-ises
  pro-pel-ler
  pro-pel-lers
  pro-pel-ling
  pro-hib-i-tive
  pro-hib-i-tive-ly
  pro-sciut-to
  pro-style
  pro-styles
  pro-test-er
  pro-test-ers
  pro-tes-tor
  pro-tes-tors
  pro-to-lan-guage
  pro-to-typ-al
  prov-ince
  prov-inces
  pro-vin-cial
  pro-virus
  pro-viruses
  prow-ess
  pseu-do-dif-fer-en-tial
  pseu-do-fi-nite
  pseu-do-fi-nite-ly
  pseu-do-forces
  pseu-dog-ra-pher
  pseu-do-group
  pseu-do-groups
  pseu-do-nym
  pseu-do-nyms
  pseu-do-word
  pseu-do-words
  psy-che-del-ic
  psychs
  pu-bes-cence
  pur-ges
  quad-ding
  qua-drat-ic
  qua-drat-ics
  quad-ra-ture
  quad-ri-pleg-ic
  quaint-er
  quaint-est
  qua-si-equiv-a-lence
  qua-si-equiv-a-lences
  qua-si-equiv-a-lent
  qua-si-hy-po-nor-mal
  qua-si-rad-i-cal
  qua-si-resid-ual
  qua-si-smooth
  qua-si-sta-tion-ary
  qua-si-topos
  qua-si-tri-an-gu-lar
  qua-si-triv-ial
  quin-tes-sence
  quin-tes-sences
  quin-tes-sen-tial
  rab-bit-ry
  ra-di-og-ra-phy
  raff-ish
  raff-ish-ly
  ram-shackle
  rav-en-ous
  re-allo-cate
  re-allo-cates
  re-allo-cated
  re-arrange
  re-arranges
  re-arranged
  re-arrange-ment
  re-arrange-ments
  rec-i-proc-i-ties
  rec-i-proc-i-ty
  rec-tan-gle
  rec-tan-gles
  rec-tan-gu-lar
  re-di-rect
  re-di-rect-ion
  re-duc-ible
  re-echo
  re-edu-cate
  ref-u-gee
  ref-u-gees
  re-phrase
  re-phrases
  re-phrased
  re-po-si-tion
  re-po-si-tions
  re-print
  re-prints
  re-print-ed
  re-stor-able
  retro-fit
  retro-fit-ted
  re-us-able
  re-use
  re-wire
  re-wrap
  re-wrapped
  re-write
  rhi-noc-er-os
  right-eous
  right-eous-ness
  ring-leader
  ring-leaders
  ro-bot
  ro-bots
  ro-botic
  ro-bot-ics
  round-table
  round-tables
  sales-clerk
  sales-clerks
  sales-woman
  sales-women
  sal-mo-nel-la
  sal-ta-tion
  sar-sa-par-il-la
  sat-el-lite
  sat-el-lites
  sauer-kraut
  scat-o-log-i-cal
  sched-ul-ing
  schiz-o-phrenic
  schnau-zer
  school-child
  school-child-ren
  school-teacher
  school-teach-ers
  scru-ti-ny
  scyth-ing
  sell-er
  sell-ers
  sec-re-tar-iat
  sec-re-tar-iats
  sem-a-phore
  sem-a-phores
  se-mes-ter
  semi-def-i-nite
  semi-di-rect
  semi-ho-mo-thet-ic
  semi-ring
  semi-rings
  semi-sim-ple
  semi-skilled
  sem-itic
  ser-geant
  ser-geants
  sero-epi-de-mi-o-log-i-cal
  ser-vo-me-chan-i-cal
  ser-vo-mech-a-nism
  ser-vo-mech-a-nisms
  ses-qui-pe-da-lian
  set-up
  set-ups
  se-vere-ly
  shap-able
  shape-able
  shoe-string
  shoe-strings
  show-hy-phens
  side-step
  side-steps
  side-swipe
  single-space
  single-spaced
  single-spacing
  sky-scraper
  sky-scrapers
  sln-uni-code
  smoke-stack
  smoke-stacks
  snor-kel-ing
  so-le-noid
  so-le-noids
  solute
  solutes
  sov-er-eign
  sov-er-eigns
  spa-ces
  spe-cious
  spell-er
  spell-ers
  spell-ing
  spe-lunk-er
  spend-thrift
  spher-oid
  spher-oids
  spher-oid-al
  sphin-ges
  spic-i-ly
  spin-or
  spin-ors
  spokes-man
  spokes-per-son
  spokes-per-sons
  spokes-woman
  spokes-women
  sports-cast
  sports-cast-er
  spor-tive-ly
  sports-wear
  sports-writer
  sports-writers
  spright-lier
  squea-mish
  stand-alone
  star-tling
  star-tling-ly
  sta-tis-tics
  stealth-ily
  steeple-chase
  stereo-graph-ic
  sto-chas-tic
  strange-ness
  strap-hanger
  strat-a-gem
  strat-a-gems
  stretch-i-er
  strip-tease
  strong-est
  strong-hold
  stu-pid-er
  stu-pid-est
  sub-dif-fer-en-tial
  sub-ex-pres-sion
  sub-ex-pres-sions
  sub-scrib-er
  sub-scrib-ers
  sub-tables
  sum-ma-ble
  super-deri-va-tion
  super-deri-va-tions
  super-ego
  super-egos
  su-prem-a-cist
  su-prem-a-cists
  sur-gery
  sur-ge-ries
  sur-ges
  sur-veil-lance
  swim-ming-ly
  symp-to-matic
  syn-chro-mesh
  syn-chro-nous
  syn-chro-tron
  taff-rail
  take-over
  take-overs
  talk-a-tive
  ta-pes-try
  ta-pes-tries
  tar-pau-lin
  tar-pau-lins
  te-leg-ra-pher
  te-leg-ra-phers
  tele-ki-net-ic
  tele-ki-net-ics
  tele-ro-bot-ics
  tell-er
  tell-ers
  tem-po-rar-ily
  ten-ure
  test-bed
  tetra-butyl-ammo-nium
  text-height
  text-length
  text-width
  thal-a-mus
  ther-mo-elas-tic
  time-stamp
  time-stamps
  tool-kit
  tool-kits
  topo-graph-i-cal
  topo-iso-mer-ase
  topo-iso-mer-ases
  toques
  trai-tor-ous
  trans-ceiver
  trans-ceivers
  trans-par-en-cy
  trans-par-en-cies
  trans-gress
  trans-ver-sal
  trans-ver-sals
  trans-ves-tite
  trans-ves-tites
  tra-vers-a-ble
  tra-ver-sal
  tra-ver-sals
  tri-ethyl-amine
  treach-eries
  tribes-man
  trou-ba-dour
  tur-key
  tur-keys
  turn-around
  turn-arounds
  typ-al
  un-at-tached
  un-err-ing-ly
  un-friend-ly
  un-friend-li-er
  vaguer
  vaude-ville
  vic-ars
  vil-lain-ess
  vis-ual
  vis-ual-ly
  vi-vip-a-rous
  voice-print
  vspace
  wad-ding
  wall-flower
  wall-flow-ers
  warm-er
  warm-est
  waste-water
  wave-guide
  wave-guides
  wave-let
  wave-lets
  weap-ons
  weap-on-ry
  web-like
  week-night
  week-nights
  wheel-chair
  wheel-chairs
  which-ever
  white-sided
  white-space
  white-spaces
  wide-spread
  wing-span
  wing-spans
  wing-spread
  witch-craft
  word-spac-ing
  work-around
  work-arounds
  work-horse
  work-horses
  wrap-around
  wrap-arounds
  wretch-ed
  wretch-ed-ly
  yes-ter-year
  al-ge-brai-sche
  Al-le-ghe-ny
  Apol-lo-dorus
  Ar-kan-sas
  ATP-ase
  ATP-ases
  Aus-tral-asian
  auto-ma-ti-sier-ter
  Beb-chuk
  Be-die-nung
  Bembo
  bi-blio-gra-phi-sche
  Bos-ton
  Brown-ian
  Bruns-wick
  Bu-da-pest
  Burck-hardt
  Car-ib-bean
  Charles-ton
  Char-lottes-ville
  Ches-ter
  Chiang
  Chich-es-ter
  Cohen
  Co-lum-bia
  Czecho-slo-va-kia
  Del-a-ware
  Dijk-stra
  Dor-ches-ter
  Dorf-leit-ner
  Drechs-ler
  Duane
  dy-na-mi-sche
  Eijk-hout
  Engle
  Engel
  Eng-lish
  Euler-ian
  Evan-ston
  Feb-ru-ary
  Fest-schrift
  Flor-i-da
  Flor-i-d-ian
  For-schungs-in-sti-tut
  Free-BSD
  funk-tsional
  Gauss-ian
  Ge-sell-schaft
  Ghost-script
  Ghost-View
  Gott-lieb
  Grass-mann-ian
  Greifs-wald
  Grothen-dieck
  Grund-leh-ren
  Ha-da-mard
  Hai-fa
  Hamil-ton-ian
  Hel-sinki
  Her-mit-ian
  Hibbs
  Hoek-water
  Hok-kai-do
  Huber
  Image-Magick
  Jac-kow-ski
  Jan-u-ary
  Ja-pa-nese
  Java-Script
  Jung-ian
  Kad-om-tsev
  Kan-sas
  Karls-ruhe
  Keynes-ian
  Kor-te-weg
  Krishna
  Krish-na-ism
  Krish-nan
  Kron-ecker
  Lan-cas-ter
  Le-gendre
  Leices-ter
  Lip-schitz
  Lip-schitz-ian
  Loj-ban
  Lou-i-si-ana
  Lucas
  MacBeth
  Mac-OS
  Ma-gel-lan
  Ma-la-ya-lam
  Man-ches-ter
  Mar-kov-ian
  Markt-ober-dorf
  Mass-a-chu-setts
  Max-well
  Meth-od-ist
  Meth-od-ism
  Mi-cro-soft
  Min-kow-ski
  Min-ne-ap-o-lis
  Min-ne-sota
  Mont-real
  Mos-cow
  Nach-rich-ten
  Nash-ville
  Net-BSD
  Net-scape
  Nij-me-gen
  Noe-ther-ian
  Noord-wijker-hout
  Noto-wi-digdo
  No-vem-ber
  Obst-feld
  Open-BSD
  Open-Office
  Oreo-pou-los
  Pala-tino
  Pa-ler-mo
  Pe-trov-ski
  Pfaff-ian
  Phil-a-del-phia
  phi-lo-so-phi-sche
  Poin-care
  Po-ten-tial-glei-chung
  Pres-by-terian
  Pres-by-terians
  Py-thag-o-ras
  Py-thag-o-re-an
  Ra-dha-krish-nan
  raths-kel-ler
  Ravi-kumar
  Reich-lin
  Rie-mann-ian
  Ryd-berg
  Schim-mel-pfen-nig
  schot-ti-sche
  Schro-din-ger
  Schwa-ba-cher
  Schwarz-schild
  Schweid-nitz
  Schwert
  Sep-tem-ber
  Shore-ditch
  Skoup
  Stokes-sche
  Stutt-gart
  Sus-que-han-na
  Tau-ber-ian
  tech-ni-sche
  Ten-nes-see
  Thiruv-ananda-puram
  Tol-ches-ter
  To-ma-szew-ski
  Toyo-ta
  ty-po-graphique
  Ukrain-ian
  ver-all-ge-mei-nerte
  Ver-ei-ni-gung
  Ver-tei-lun-gen
  Vid-ias-sov
  Vieth
  viiith
  viith
  Wahr-schein-lich-keits-theo-rie
  Wein-stein
  Wer-ner
  Wer-ther-ian
  Will-iam
  Will-iams
  Win-ches-ter
  Wirt-schaft
  wis-sen-schaft-lich
  Wolff-ian
  xviiith
  xviith
  xxiiird
  xxiind
  Ying-yong Shu-xue Ji-suan
  Zea-land
  Zeit-schrift
}
\fi
%    \end{macrocode}
% We done with a very long and exhausting, preamble but hopefully
% will save countless hours for other people. If you use it in your
% publication send me a copy of it. 
% 	
%\iffalse
%</package>
%\fi
% \section{Test macros}
% We provide a series of MWE for testing purposes.
% \subsection{Letter MWE}
% \iffalse
%<*MWE-01>
% \fi
% \subsection{MWE-01, using \texttt{multicol} and \texttt{multitoc}}
%    \begin{macrocode}
%^^A This is an example using the default |lstlisting|
%^^A environment.
\documentclass{article}
\usepackage{phd}
\begin{document}
  \begin{lstlisting}
    \def\test{This is a test.}  
  \end{lstlisting}
  \begin{teX}
    \def\test{This is a test.} 
  \end{teX}
  \begin{teXX}
    \def\test{This is a test.} 
  \end{teXX}
  
  \startnumberat{25}
  \begin{teX}
    \def\test{This is a test.} 
  \end{teX}
  
  \startnumberat{35}
  \begin{teX}
    % coloring comments is done in orange
    \def\test{This is a test.} 
  \end{teX}
\end{document}
%    \end{macrocode}
% \iffalse  
%</MWE-01>
% \fi
% \iffalse
%<*MWE-02>
% \fi
% \subsection{Listings MWE-02}
%    \begin{macrocode}
%% Example using |multitoc|
\documentclass{article}
\usepackage{phd}
\renewcommand{\multicolumntoc}{2}
\title{Typesetting the Table of Contents in Multiple Columns}
\author{Dr Y. Lazarides}
\begin{document}
\maketitle
\tableofcontents
\section{First section}
\begin{multicols}{3}
\lipsum[1-2]
\end{multicols}
\subsection{First subsection}
\subsection{Second subsection}
\subsection{Third subsection}
\subsection{Last subsection}
\section{Second section}
\subsection{First subsection}
\subsection{Second subsection}
\subsection{Third subsection}
\subsection{Last subsection}
\section{Last section}
\subsection{First subsection}
\subsection{Second subsection}
\subsection{Third subsection}
\subsection{Last subsection}
\end{document}
%    \end{macrocode}
% \iffalse  
%</MWE-02>
% \fi
% 
% \subsection{Listings MWE-03}
% 
% \iffalse
%<*MWE-03>
% \fi
%    \begin{macrocode}
%% example for using encoded commands such as guillemets. (If you need
%% shorthands you need to load babel.
%%
\documentclass{article}
\usepackage{phd}
\newcommand{\encone}[1]{{\fontencoding{T1}\selectfont#1}}
\begin{document}
\def\Kt#1{{\encone{#1}} &{\small\ttfamily\string#1}}

\noindent\begin{tabular}{@{}*8l@{}}
\toprule
\Kt\guillemotleft  & \Kt\guilsinglleft & \Kt\quotedblbase & \Kt\textquotedbl \\
\Kt\guillemotright & \Kt\guilsinglright & \Kt\quotesinglbase \\
\bottomrule
\end{tabular}
\medskip

\lipsum[1]
\end{document}
%    \end{macrocode}
% \iffalse  
%</MWE-03>
% \fi
% 
% \iffalse
%<*test-tufte>
% \fi
%    \begin{macrocode}
\documentclass[justified]{tufte-book}
\usepackage{phd}
\begin{document}
\lipsum[1]
\sidenote{\RaggedRight \protect\lipsum[5]}
\centering
\begin{minipage}{5cm}
\RaggedRight

\lipsum[1]
\end{minipage}
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-tufte>
% \fi
%
% \iffalse
%<*test-memoir>
% \fi
%    \begin{macrocode}
% clashes with options
\documentclass{memoir}
\usepackage{phd}
\begin{document}
\lipsum[1]
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-memoir>
% \fi
%
%\iffalse
%<*test-scrartcl>
% \fi
%    \begin{macrocode}
% clashes with options
\documentclass{scrartcl}
\usepackage{phd}
\begin{document}
\lipsum[1]

\[ A = \upalpha r^2/4\]

% check for complaints
$$ A = a + b $$
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-scrartcl>
% \fi
% 
%\iffalse
%<*test-hyphenation>
% \fi
%    \begin{macrocode}
\documentclass{scrartcl}
\usepackage{phd}
\begin{document}
%% Tests if hyphenation routines have been
%% found.
\hsize2cm
\noindent Florida appendix asynchronous
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-hyphenation>
% \fi
%
%\iffalse
%<*test-algorithms>
% \fi
%    \begin{macrocode}
% clashes with options
\documentclass{article}
\usepackage{phd}
\begin{document}
\begin{algorithm}[H]
\SetAlgoLined
\KwData{this text}
\KwResult{how to write algorithm with \LaTeX2e }
initialization\;
\While{not at end of this document}{
read current\;
\eIf{understand}{
go to next section\;
current section becomes this one\;
}{
go back to the beginning of current section\;
}
}
\caption{How to write algorithms}
\end{algorithm}
\IncMargin{1em}
\begin{algorithm}
\SetKwData{Left}{left}\SetKwData{This}{this}\SetKwData{Up}{up}
\SetKwFunction{Union}{Union}\SetKwFunction{FindCompress}{FindCompress}
\SetKwInOut{Input}{input}\SetKwInOut{Output}{output}
\Input{A bitmap $Im$ of size $w\times l$}
\Output{A partition of the bitmap}
\BlankLine
\emph{special treatment of the first line}\;
\For{$i\leftarrow 2$ \KwTo $l$}{
\emph{special treatment of the first element of line $i$}\;
\For{$j\leftarrow 2$ \KwTo $w$}{\label{forins}
\Left$\leftarrow$ \FindCompress{$Im[i,j-1]$}\;
\Up$\leftarrow$ \FindCompress{$Im[i-1,]$}\;
\This$\leftarrow$ \FindCompress{$Im[i,j]$}\;
\If(\tcp*[h]{O(\Left,\This)==1}){\Left compatible with \This}{\label{lt}
\lIf{\Left $<$ \This}{\Union{\Left,\This}}\;
\lElse{\Union{\This,\Left}\;}
}
\If(\tcp*[f]{O(\Up,\This)==1}){\Up compatible with \This}{\label{ut}
\lIf{\Up $<$ \This}{\Union{\Up,\This}}\;
\tcp{\This is put under \Up to keep tree as flat as possible}\label{cmt}
\lElse{\Union{\This,\Up}}\tcp*[r]{\This linked to \Up}\label{lelse}
}
}
\lForEach{element $e$ of the line $i$}{\FindCompress{p}}
}
\caption{disjoint decomposition}\label{algo_disjdecomp}
\end{algorithm}\DecMargin{1em}
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-algorithms>
% \fi
% ^^A\addtocontents{toc}{\protect\end{multicols}}
% \Finale
% \PrintIndex
\endinput


%% One can use the multitoc for two column toc lof etc also see doc.dtx

%% Use ^^A for % sign otherwise it gives you problems
% For epigraphs
% http://tex.stackexchange.com/questions/53377/inspirational-quote-at-start-of-chapter












