% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd --- a package to shorten preambles
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a phd for defining a class.
%</readme>
%<*readmemd>

This work consists of the file  `phd.dtx`,
and the derived files   `phd.ins`,  `phd.pdf`, and `phd.sty`.

###Installation

run
          
           pdflatex phd.dtx
           makeindex -s gind.ist phd.idx

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

%</readmemd>

%<*TODO>
add tcolorbox support
%</TODO>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex

\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- short description.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2011 by Dr. Yiannis Lazarides <yannislaz@gmail.com>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Dr. Yiannis Lazarides.

This work consists of the file  phd.dtx
and the derived files              phd.ins,
                                           phd.pdf, and
                                           phd.sty.

\endpostamble
\usedir{tex/latex/phd}
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}}
\generate{
  \file{MWE-02.tex}{\from{\jobname.dtx}{MWE-02}}
  \file{MWE-03.tex}{\from{\jobname.dtx}{MWE-03}}
}
\generate{
  \file{test-tufte.tex}{\from{\jobname.dtx}{test-tufte}}
  \file{test-memoir.tex}{\from{\jobname.dtx}{test-memoir}}
  \file{test-scrartcl.tex}{\from{\jobname.dtx}{test-scrartcl}}
 }
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{tex/latex/phd}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}

\nopreamble\nopostamble
\usedir{source/phd}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\generate{
  \file{README.md}{\from{\jobname.dtx}{readmemd}}
}


\generate{
  \file{TODO.tex}{\from{\jobname.dtx}{TODO}}
}

\generate{
  \file{MWE-01.tex}{\from{\jobname.dtx}{MWE-01}}
}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi

%</internal>
%<*driver>
\listfiles
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{microtype}
\usepackage[toc,lof,lot]{multitoc}
%\usepackage{dateiliste}
\usepackage{\jobname}


\usepackage[listings,theorems]{tcolorbox}
\tcbset{before={\par\medskip\pagebreak[0]\noindent},after={\par\medskip}}%
\usepackage{multicol}
\usepackage{hypdoc}
\hypersetup{pdftex,
  bookmarks,
  raiselinks,
  pageanchor,
  hyperindex,
  colorlinks,
  allcolors=theblue, 
  %anchorcolor= blue,
  %filecolor=blue,
  urlcolor=theblue,
  linkcolor= cyan,
  pdftitle={My Title},
 }

% add pdfinfo  
% 
% 

%\newcommand*{\file}[1]{\texttt{#1}}
\newcommand*{\pkg}[1]{\texttt{#1}}
%\usepackage[numbered]{hypdoc}
\definecolor{lstbgcolor}{rgb}{0.9,0.9,0.9}
 
 \usepackage{fancyvrb}
\newcommand*{\Lpack}[1]{\textsf {#1}}           
\newenvironment{example}
  {\VerbatimEnvironment
   \begin{VerbatimOut}[gobble=2]{example.out}}
  {\end{VerbatimOut}
   \begin{center}
   \fbox{\begin{minipage}{.9\linewidth}
     \lstset{breakatwhitespace=true,breaklines=true,language=TeX,basicstyle=\small}
     \lstinputlisting[]{example.out}
   \end{minipage}}

   \fbox{\begin{minipage}{.9\linewidth}
     \input{example.out}
   \end{minipage}}
\end{center}
}
%%http://tex.stackexchange.com/questions/75055/print-filelist-to-pdf/75064#75064
%\printFileList
%

\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
   \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%% \CheckSum{200}
%% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
% \changes{1.01}{2013/01/27}{Added multicol}
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% \providecommand*{\url}{\texttt}
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
%
%
% \maketitle
%
% \abstract{This is a helper package to compliment standard classes by
% pre-loading a set of packages and providing some opiniated settings. Pretty
% much work in progress, and currently supplements, the tufte-class well.}
% 
% ^^A Table of contents in two columns --- borrowed from the standard 
% ^^A package of ``doc.dtx''
% 
% \newif\ifmulticols
% \IfFileExists{multicol.sty}{\multicolstrue}{}
%
% ^^A\ifmulticols
% ^^A\addtocontents{toc}{\protect\begin{multicols}{2}}
% ^^A\fi
%
% {\parskip 0pt                ^^A We have to reset \parskip
%                              ^^A (bug in \LaTeX)
% \tableofcontents
% \listoftables
% \listoffigures
% }
% 
% \section{Introduction}
% 
% It is quite common during the writing of a thesis or book
% for the author to keep on adding macros and packages
% at the pre-amble of the document. In most cases this can
% be satisfactory but in many others it leads to
% incompatibilities and errors. This package aims at
% minimizing one's preamble, by prefetching a number of
% commonly used packages. It also aims at loading them
% in the right order and providing patches for some of them.
% 
% I am hoping that using this package, will lead to less
% frustrations with the intricacies of LaTeXe packages.
% 
% \input{packages-table}
% 
% \section{Ordering of Packages}
% 
% One package that normally leads to errors is the 
% |hyperref|. As a lot of internal commands of the kernel
% and of some packages it has to be loaded at the end
% of the preable with the exception of some packages! 
% 
% This manual is typeset according to the conventions of the
% \LaTeX \textsc{docstrip} utility which enables the automatic
% extraction of the \LaTeX{} macro source files~\cite{GOOSSENS94}.
%
% 
% \href{http://tex.stackexchange.com/questions/96350/problem-with-algorithmic-and-hyperref}{problem with algorithmic and hyperref}
% \begin{verbatim}
%\usepackage{float}  % load float package first!
%
%\usepackage{hyperref} % let hyperref patch the float package stuff
%.
% \usepackage{algorithm} % let algorithm use the patched version of the float package
% \end{verbatim}
% \section{Conventions}
% \subsection{Defining Colors}
% All color definitions are of the form |the<color>|. So the setting for |theblue| is called
% |theblue|. This provides easy to remember commands.
% 
% \section{Document Structure}
% We do not load too many packages for document structure, a these are expected to be
% treated at class level.
% \begin{table}[ht]
% \centering
% \caption{Packages used for structure.}
% \begin{tabular}{ll}
%   \toprule
%   Package  & Default\\
%   \midrule
%   |multicol| & called by author  \\
%   \bottomrule
% \end{tabular}
% \end{table}
% \section{Use of boxes}
% You can use the |tcolorbox| package to create nicely formatted boxes for examples.
%\newcounter{texercise}[section]
%\begin{tcolorbox}[colback=blue!5,colframe=blue!50!black,arc=1mm,
%                          theorem={Equations}{texercise}{More on summation}{myMarker}]{}{}
%\medskip
%
%\begin{tabular}{lr@{~}c@{~}l@{\qquad}r}
%\multicolumn{5}{l}{\hspace{-2ex}\textbf{Line Values.}} \\
%\multicolumn{5}{r}{}\\
%\multicolumn{4}{l}{Altitude of triangle on side $a$,} \\
%& $h$ &=& \( \displaystyle \frac{2}{a}
%             \sqrt{s(s-a)(s-b)(s-c)} \) & \\
%%
%\multicolumn{4}{l}{Median of triangle on side $a$,} \\
%& $m$ &=& \( \frac{1}{2} \sqrt{2(b^2+c^2) - a^2} \) & \ \\
%\multicolumn{5}{l}{\hspace{-2ex}\textbf{Areas.}} \\
%Rectangle,      & $S$ &=& $b\times h$ &  \\
%Square,         & $S$ &=& $b^2$        &  \\
%\end{tabular}
%\end{tcolorbox}
%
% \section{Version control with Git and Github}
% If you are involved with code or a publication that will have frequent changes, you should consider
% some type of version control system. My own recommendation is to use |git| and an online repository such
% as |github|. The latter is currently very fashionable and makes sharing code easier. Note that the |github|
% offers both public as well as private repositories. The general recommendation is that for unpublished work
% such as a thesis or code under development, it is preferable to go for a private repository. 
% 
% \subsection*{What is the difference between Git and GitHub?}
%git is a version control, system think of it as a series of snapshots (commits) of your code. You see 
%a path of this snapshots, in which order they where created. You can make branches to experiment and come back to snapshots you took.
%GitHub, is a web-page on which you can publish your git repositories and collaborate with other people.
%
% \subsection*{Is git saving every repository locally (in the user's machine) and in GitHub?}
%
% No, it's only local. You can decide to push (publish) some branches on GitHub.
%
% \subsection*{Can you use Git without GitHub? If yes, what would be the benefit for using GitHub?}
%
% Yes, it runs local. You could back it up with dropbox. See also \href{http://dotmonster.co/backup-and-sync-folders-with-dropbox-and-symbolic-links/}{how to sync your git folders to dropbox}.
%
%\subsection*{How does Git compare to a backup system such as Time Machine?}
%
%It's a different thing, git lets you track changes and your development process. If you use git with GitHub, it becomes effectively a backup. However usually you would not push all the time to GitHub, at which point you do not have a full backup if things go wrong. I use git in a folder that is synchronized with dropbox.
%
%\subsection*{Is this a manual process, in other words if you don't commit you wont have a new version of the changes made?}
%
%Yes, commiting and pushing are both manual.
%
%\subsection*{If are not collaborating and you are already using a backup system why would you use Git?}
%
% You program worked. You developed more, your program does not work. git diff, shows you the difference between the current code and the last working commit.
%
% Or you just go back to the last working. You want to try a change, but are not sure it really will work. 
% You create a branch, test you code change. If it works fine, you merge it to the main branch. If it does not you throw the branch away and go back to the main branch.
% You did some debugging. Before you commit you always look at the changes from the last commit. You see your debug print statement that you forgot to delete.
%
%Make sure you check gitimmersion.com.
% 
% \StopEventually{}

%<*package>
% \section{Implementation}
%
%    Standard file identification. We first announce the package and require that it be used with LaTeX2e. 
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}% LaTeX 2.09 can't be used (nor non-LaTeX)
[1994/12/01]% LaTeX date must be December 1994 or later
\ProvidesPackage{phd}[2013/2/26 v1.0 less preamble (YL)]
%    \end{macrocode}
%    
% \section{Best practices} 
% 
% We load a few packages for fixes and errors and |nag| if outdated packages are used.
% Modify to suit your requirements.  
% Package management is a bit complex to avoid errors
% with options.
%To find out if a package has already been loaded, use
%|\@ifpackageloaded|\meta{package}\meta{true}\meta{false}.
%|\@ifpackagelater| To find out if a package has already been loaded with a version more recent
%|\@ifclasslater| than hversioni, use |\@ifpackagelater|\meta{hpackagei}\meta{hversioni}\meta{htruei}\meta{hfalsei}.
%|\@ifpackagewith| To find out if a package has already been loaded with at least the options
%hoptionsi, use |\@ifpackagewith|\meta{hpackagei}\meta{hoptionsi}\meta{htruei}\meta{hfalsei}. 
%There exists one package that can't be tested with the above commands: the
%fontenc package pretends that it was never loaded to allow for repeated reloading
%with different options (see ltoutenc.dtx for details).

% \url{http://tex.stackexchange.com/questions/19264/techniques-and-packages-to-keep-up-with-good-practices?rq=1}
% and \href{http://stackoverflow.com/questions/193298/best-practices-in-latex}{best practices in LaTeX.}
%    \begin{macrocode}
\RequirePackage{fixltx2e}                % LaTeX2e fixes
\RequirePackage[l2tabu, orthodox]{nag}   % Old habits die hard. All the same, there are
                                                               % commands, classes and packages which are 
                                                               % outdated and superseded. nag provides routines
                                                               % to warn the user about the use of those.

\RequirePackage[all, error]{onlyamsmath}  % Error on deprecated math commands like $$ $$.
%    \end{macrocode}
% \subsection{Call some other packages}
% 
% \section{Graphics}
% 
% We load the package |graphicx| with no options. We let |graphicx|, to 
% handle any draft options via the class itself. We load the package |caption|
% for any captions outside floats. (Needs checking where to place).
% \href{http://tex.stackexchange.com/questions/3131/graphicspath-for-miktex}{graphicspath for MikTeX} check
% adds figures etc to paths
% 
%    \begin{macrocode}
\RequirePackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
\graphicspath{{graphics/}{graphics//}{images//}{./graphics/}{../graphics/}}
\usepackage{wrapfig}
\usepackage{rotating}
%    \end{macrocode} 
% 
% \section{Color Management}
% Most classes load the |xcolor| package, including
% it here, should either be able to check if it was 
% loaded by the class or to pass the options before
% the class itself.
%    \begin{macrocode}
\@ifpackageloaded{xcolor}{}%
 {\RequirePackage[fixpdftex, xtable, usenames, dvipsnames,  
                    svgnames, x11names]{xcolor}}

\definecolor{theblue} {rgb}{0.02,0.04,0.48}
\definecolor{thered}  {rgb}{0.65,0.04,0.07}
\definecolor{thegreen}{rgb}{0.06,0.44,0.08}
\definecolor{thegrey} {gray}{0.5}
\definecolor{theshade}{gray}{0.94}
\definecolor{theframe}{gray}{0.75}
\RequirePackage{pgf}[2008/01/15]
%    \end{macrocode}
% 
%    \begin{macrocode}
\newcommand{\done}{\cellcolor{teal}done}  
\newcommand{\partialdone}{\cellcolor{yellow}done}
\newcommand{\hcyan}[1]{{\color{teal} #1}}
%    \end{macrocode}
% \section{Lipsum}
% In publishing and graphic design, lorem ipsum is placeholder text (filler text) commonly used to demonstrate the graphics elements of a document or visual presentation, such as font, typography, and layout, by removing the distraction of meaningful content. The lorem ipsum text is typically a section of a Latin text by Cicero with words altered, added and removed that make it nonsensical in meaning and not proper Latin. Other packages exist such as |kantlipsum| and |blindtext|, however,
%both result in somewhat legible texts, which defeats the purpose of providing texts that the reader is not going to read. the extensions |lipsumx| aim at
%providing a gap between the three packages. It provides extensions
% for full document testing.

%    \begin{macrocode}
\RequirePackage{lipsum}
%    \end{macrocode}
%
% \section{tables}
% 
% \begin{macro}{\inc}
% \begin{macro}{\resetinc}
% It is highly unlikely that a publication, would not have a table
% somewhere, to make life easier we use |booktabs|.
%    \begin{macrocode}
\RequirePackage{booktabs}
\RequirePackage{tabularx}
\RequirePackage{dcolumn}
\RequirePackage{longtable}
\RequirePackage{colortbl}
\RequirePackage{multirow}
\newcounter{step}
\def\resetinc{\setcounter{step}{0}}
\def\inc{\stepcounter{step}\thestep}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 

%    
% \section{Package Management} 
%    
% Each of the packages used by this document is loaded conditionally.
% However, it might be nice to know if we have a complete set.  So we
% define |\ifcomplete| which starts true, but gets set to false if any
% package is missing. Some code is necessary in order to manage the complexity.
% I am idebted to the source of symbols.tex for some of the macros.
% 
% There are a number of symbols (e.g., \cmd{\Square}) that are defined by      
% multiple packages.  In order to typeset all the variants in this       
% document, we have to give glyph a unique name.  To do that, we define  
% \cmd{\savesymbol{XXX}}, which renames a symbol from \cmd{\XXX} to \cmd{\origXXX}, and    
% \cmd{\restoresymbols{yyy}{XXX}}, which renames \cmd{\origXXX} back to \cmd{\XXX} and     
% defines a new command, |\yyyXXX|, which corresponds to the most recently 
% loaded version of |\XXX|.                                                
%                                                                        
% This implementation of \savesymbol and \restoresymbol was copied from  
% the savesym package, which started with symbol.tex's old definitions   
% of those macros and improved upon them.  However, \renamerobustsymbol  
% and |\ifnotsavedsym| are new to this set.                                
%                                                                        

% Save a symbol that we know is going to get redefined.
%    \begin{macrocode}
\newcommand*{\savesymbol}[1]{%
  \expandafter\let\csname orig#1\expandafter\endcsname\csname#1\endcsname
  \expandafter\let\csname #1\endcsname\relax
}
%    \end{macrocode}
%    
% Restore a previously saved symbol, and rename the current one.
%    \begin{macrocode}
\newcommand*{\restoresymbol}[2]{%
  \expandafter\global\expandafter\let\csname#1#2\expandafter\endcsname%
    \csname#2\endcsname
  \expandafter\global\expandafter\let\csname#2\expandafter\endcsname%
    \csname orig#2\endcsname
}
%    \end{macrocode}   
% Rename a robust command.
%    \begin{macrocode}
\newcommand*{\renamerobustsymbol}[2]{%
  \expandafter\let\expandafter\origrealcommand
    \csname #2\space\endcsname
  \expandafter\global\expandafter\let\csname#1#2\endcsname=\origrealcommand
}
%    \end{macrocode}
% Test if a symbol is not saved.
%    \begin{macrocode}
\def\ifnotsavedsym@helper#1#2!{\expandafter\ifx\csname orig#2\endcsname\relax}
\newcommand*{\ifnotsavedsym}[1]{%
  \expandafter\ifnotsavedsym@helper\string#1!%
}
%    \end{macrocode}
% \begin{macro}{\ifcomplete}
%    \begin{macrocode}
\newif\ifcomplete
%    \end{macrocode}
% \end{macro}    
%    
% For debugging purposes we define a switch that enables us to toggle
% on and off the loading of packages.
% 
%    \begin{macrocode}
\newif\ifloadpackages
\loadpackagestrue
%    \end{macrocode}
%    
% |\IfStyFileExists*| is just like |\IfFileExists|, except that it appends
% ".sty" to its first argument.  |\IfStyFileExists| is the same as
% |\IfStyFileExists*|, but it additionally adds its first argument to a list
% (|\missingpkgs|) and marks the document as incomplete (with
% |\completefalse|) if the |.sty| file doesn't exist.
% 
% \begin{macro}{\missingpkgs}
% \begin{macro}{\foundpkgs}
%   \begin{macrocode}
\newcommand{\missingpkgs}{}
\newcommand{\foundpkgs}{}
\newcommand{\if@sty@file@exists@star}[3]{%
  \ifloadpackages
    \IfFileExists{#1.sty}{#2}{#3}%
  \else
    #3%
  \fi
}
\newcommand{\if@sty@file@exists}[3]{%
  \ifloadpackages
    \IfFileExists{#1.sty}%
                 {#2\@cons\foundpkgs{{#1}}}%
                 {#3\completefalse\@cons\missingpkgs{{#1}}}%
  \else
    #3\completefalse\@cons\missingpkgs{{#1}}%
  \fi
}
\newcommand{\IfStyFileExists}{%
  \@ifstar{\if@sty@file@exists@star}{\if@sty@file@exists}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}

%
% \section{Maths}
%    \begin{macrocode}
\RequirePackage{amsfonts}[2009/06/22]
\RequirePackage{amsmath}[2000/07/18] 
\RequirePackage{amssymb}[2002/01/22]
\RequirePackage{amsthm}[2002/01/22]
\RequirePackage{mathtools}
%    \end{macrocode}
% The package |stmaryrd| can be used for additional symbols. 
%    \begin{macrocode}
\RequirePackage{stmaryrd}
%    \end{macrocode}
% For calligraphic fonts we load the package |eucal|. The package is not actually needed, if 
% amsfonts are loaded? Consider removing.
%    \begin{macrocode}
\newif\ifEU
\IfStyFileExists{euscript}
  {\EUtrue\RequirePackage[mathcal]{euscript}
   \renewcommand{\mathcal}[1]{\mbox{\usefont{U}{eus}{m}{n}##1}}
  }
  {\let\CMcal\mathcal}
%    \end{macrocode}


% \section{Special Symbols}
% The Comprehensive LaTeX Symbols guide, has numerous symbols \ldots
% We use the \pkg{texcomp} package for special symbols, such as |\checkmark|
%    \begin{macrocode}
\RequirePackage{textcomp}
\RequirePackage{latexsym}
\newif\ifWASY
\newcommand\WASY{\pkgname{wasysym}}
\IfStyFileExists{wasysym}
  {\WASYtrue
   \savesymbol{lightning}
   \savesymbol{Box}
   \savesymbol{Diamond}
   \savesymbol{clock}
   \RequirePackage{wasysym}
   \restoresymbol{WASY}{lightning}
   \restoresymbol{WASY}{Box}
   \restoresymbol{WASY}{Diamond}
   \restoresymbol{WASY}{clock}
  }
  {}
\newif\ifPI
\newcommand\PI{\pkgname{pifont}}
\IfStyFileExists{pifont}
  {\PItrue\usepackage{pifont}}
  {}  
%    \end{macrocode}


%    
% marvosym underwent a major rewrite for the 2000/05/01 version, adding
% a large number of new symbols.  If it looks like we have only the
% older version, pretend we don't have it at all.
%    \begin{macrocode}  
\newif\ifMARV
\newcommand\MARV{\pkgname{marvosym}}
\IfStyFileExists*{marvosym}
  {\savesymbol{CheckedBox}
   \RequirePackage{marvosym}[2000/05/01]  % Major rewrite at this version.
   \global\MARVtrue
   \@ifundefined{Denarius}            % \Denarius is a newer symbol.
     {\global\MARVfalse}
     {}
   \@ifundefined{MVRightarrow}        % \Mvrightarrow is an even newer symbol.
     {\global\MARVfalse}
     {}
  }
  {}

%    \end{macrocode}
% 
%    \begin{macrocode}       
\newif\ifMAN
\newcommand\MAN{\pkgname{manfnt}}
\IfStyFileExists{manfnt}
  {\MANtrue\usepackage{manfnt}}
  {}

\newif\ifDING
\newcommand\DING{\pkgname{bbding}}
\IfStyFileExists{bbding}
  {\DINGtrue
   \savesymbol{Cross} \savesymbol{Square}
   \usepackage{bbding}
   \restoresymbol{ding}{Cross} \restoresymbol{ding}{Square}
  }
  {}
%    \end{macrocode}


%    
% \subsection{The \texttt{undertilde} package}      
%    \begin{macrocode}    
\newif\ifUTILD
\newcommand\UTILD{\pkgname{undertilde}}
\IfStyFileExists{undertilde}
  {\UTILDtrue\usepackage{undertilde}}
  {}
\newif\ifIFS
\newcommand\IFS{\pkgname{ifsym}}
\IfStyFileExists{ifsym}
  {\IFStrue
   \savesymbol{Letter} \savesymbol{Square} \savesymbol{Cross} \savesymbol{Sun}
   \savesymbol{TriangleUp} \savesymbol{TriangleDown} \savesymbol{Circle}
   \savesymbol{Lightning}
   \usepackage[alpine,clock,electronic,geometry,misc,weather]{ifsym}[2000/04/18]
   \restoresymbol{ifs}{Letter} \restoresymbol{ifs}{Square}
   \restoresymbol{ifs}{Cross} \restoresymbol{ifs}{Sun}
   \restoresymbol{ifs}{TriangleUp} \restoresymbol{ifs}{TriangleDown}
   \restoresymbol{ifs}{Circle} \restoresymbol{ifs}{Lightning}
   \DeclareRobustCommand{\allCubes}{%
     \Cube{1}~%
     \Cube{2}~%
     \Cube{3}~%
     \Cube{4}~%
     \Cube{5}~%
     \Cube{6}%
   }
  }
  {}  
  
%    \end{macrocode}
% The |ifsym| package can produce some fancy symbols such as \Cube{1},\Cube{6} etc.
%                    
%    \[ \utilde{aqqbqqcqq} \]



% \section{Epigraphs and quotations}
% \subsection{Epigraphs}
%    \begin{macrocode}
\RequirePackage{epigraph}
%% Set up the epigraph to be a bit wider
\setlength{\epigraphwidth}{8cm} 
\setlength{\epigraphrule}{0pt}
\newcommand{\theepigraph}[2]{\epigraphhead[30]{\epigraph{#1}{\textit{#2}}}}
%    \end{macrocode}
% \section{Units and formatting of numbers and dates}
%    \begin{macrocode}
\RequirePackage{siunitx}
  \sisetup{fixed-exponent =0,
           scientific-notation = false}
\RequirePackage{numprint} % only for formatting large numbers?
%    \end{macrocode}
% 
% \section{filecontents}
% We ue the filecontents package, to open and write files on disk on the fly.
% See the sample manual as to how to use.
%    \begin{macrocode}
\RequirePackage{filecontents}
%    \end{macrocode}   
%    
% \section{Utilities for programming}
% The below packages offer some good utilities that you may find useful, if you are
% going to program and develop additional macros.
% |\strictpagecheck| can be used effectively for a number of situations, where you need to 
% know if you are on an odd or even page.
%    \begin{macrocode}
\RequirePackage{changepage}    
\RequirePackage{keyval}
\RequirePackage{ifmtarg}
\RequirePackage{fp}
\RequirePackage{ifthen}
\RequirePackage{xstring}
%% \RequirePackage{cool, coolstr} conflicts to be resolved.
\RequirePackage{etoolbox}
\RequirePackage{listings}
\RequirePackage{tikz}
%    \end{macrocode}
%    
% \section{Code Typesetting}
% 	A lot of users use LaTeX for computer related code we include all the necessary
% 	code to use the |listings| package. We also provide some predefined environments.
% 	
% 	
%    \begin{macrocode}
\RequirePackage[listings,theorems]{tcolorbox}
\lstdefinelanguage{Verse}%
{morekeywords={poemtitle, poemtoc, versewidth, vin, poemlines,poemtitlefont, 
ProvidesClass,IfFileExists,RequirePackage,ifthenelse,chapter,includegraphics, newarray,readarray,of
}}

\lstloadlanguages{[LaTeX]TeX, [primitive]TeX, Verse}

\lstset{language={[LaTeX]TeX},
      escapeinside={{(*@}{@*)}}, 
       numbers=left, gobble=2,
       stepnumber=1,numbersep=5pt, 
       numberstyle={\footnotesize\color{gray}},firstnumber=last,
       breaklines=true,
       framesep=5pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
      stringstyle=\color{orange},
      commentstyle=\color{black},
      rulecolor=\color{theshade},
      breakatwhitespace=true,
      showspaces=false, 
      xleftmargin=0pt,
      xrightmargin=5pt,
      aboveskip=3pt plus1pt minus1pt, 
      belowskip=7pt plus1pt minus1pt,  
      backgroundcolor=\color{theshade}
}
%    \end{macrocode}
%	
%	
% \begin{environment}{teX}	
% 	The environment |\begin{TeX}..\end{TeX}| provides a listings environment
% 	for typesetting, either TeX or LaTeX code.
% 	
%    \begin{macrocode}
\lstnewenvironment{teX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      breaklines=true,
      framesep=5pt,
      basicstyle=\normalsize\ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\color{blue},
      stringstyle=\color{orange},
	 commentstyle=\color{orange},
	 rulecolor=\color{theshade},
      breakatwhitespace=true,
	 xleftmargin=0pt,
	 xrightmargin=5pt,
	 aboveskip=\medskipamount,
	 belowskip=\medskipamount,
      backgroundcolor=\color{theshade}, #1
}}
{}


\lstnewenvironment{teXX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      breaklines=true,
      framesep=5pt,
      basicstyle=\normalsize\ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\color{blue},
      stringstyle=\color{maroon},
	 commentstyle=\color{black},
	 rulecolor=\color{gray!10},
      breakatwhitespace=true,
	 xleftmargin=0pt,
	 xrightmargin=5pt,
	 aboveskip=\medskipamount,
	 belowskip=\medskipamount,
      backgroundcolor=\color{gray!10}, #1
}}
{}

%% Emphasis
\renewcommand{\ttdefault}{cmtt}			% prefer old tt font
\newcommand\emphasis[2][red]{\lstset{emph={write,void,writeln,#2},
   emphstyle={\ttfamily\textcolor{#1}}}}%
\lstnewenvironment{teXXX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      escapeinside={{(*@}{@*)}},
      breaklines=true,
      framesep=5pt,
      basicstyle=\ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\textcolor{blue},
      stringstyle=\color{orange},
	 commentstyle=\color{black},
	 rulecolor=\color{gray!10},
      breakatwhitespace=true,
      showspaces=false,  % shows spacing symbol
	 xleftmargin=0pt,
	 xrightmargin=5pt,
	 aboveskip=0pt, % compact the code looks ugly in type
	 belowskip=0pt,  % user responsible to insert any skips
      backgroundcolor=\color{gray!15}, #1
}}
{}
%
%    \end{macrocode}
% \end{environment}    
%    
%	
% \begin{macro}{\continuelinenumber} 
% \begin{macro}{\startnumberat} 
%  The macro \cs{continueLineNumber}, provides a command
%  to start the next block of code with the code numbers continuing.
%  This requires the |listings| which is already included.
%  
%    \begin{macrocode}
% Always I forget this so I created some aliases
\newcommand\continuelinenumber{\lstset{firstnumber=last}}
\newcommand\startlineat[1]{\lstset{firstnumber=#1}}
\let\numberlineat\startlineat
\let\startnumberat\numberlineat
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \section{Common packages for structuring documents}
% The structuring commands, should ideally be loaded by the class. In case the class
% does not loaded them. We use the \pkg{multicol}, for multiple columns.
%    \begin{macrocode}
\RequirePackage{multicol}
\RequirePackage[toc]{multitoc}
%    \end{macrocode} 
%    
% \section{Common packages for Typography}
% We load package for typography
%    \begin{macrocode}
\RequirePackage{ragged2e}
%    \end{macrocode}
% \subsection{Highlighting}
%    \begin{macrocode}
\RequirePackage{soul}
%    \end{macrocode}  
%
% \section{Floats settings}                    
% Use Donald Arseneau's improved float parameters. I am not too sure when this was first referenced
% once I find it, will provide a citation and or a link.
% 
%    \begin{macrocode}
\renewcommand{\topfraction}{.85}
\renewcommand{\bottomfraction}{.7}
\renewcommand{\textfraction}{.15}
\renewcommand{\floatpagefraction}{.66}
\renewcommand{\dbltopfraction}{.66}
\renewcommand{\dblfloatpagefraction}{.66}
\setcounter{topnumber}{9}
\setcounter{bottomnumber}{9}
\setcounter{totalnumber}{20}
\setcounter{dbltopnumber}{9}
%	\end{macrocode}
%	
% We done with a very long and exhausting, preamble but hopefully
% will save countless hours for other people. If you use it in your
% publication send me a copy of it. 
% 	
%\iffalse
%</package>
%\fi
% \section{Test macros}
% We provide a series of MWE for testing purposes.
% \subsection{Letter MWE}
% \iffalse
%<*MWE-01>
% \fi
% \subsection{MWE-01, using \texttt{multicol} and \texttt{multitoc}}
%    \begin{macrocode}
%^^A This is an example using the default |lstlisting|
%^^A environment.
\documentclass{article}
\usepackage{phd}
\begin{document}
  \begin{lstlisting}
    \def\test{This is a test.}  
  \end{lstlisting}
  \begin{teX}
    \def\test{This is a test.} 
  \end{teX}
  \begin{teXX}
    \def\test{This is a test.} 
  \end{teXX}
  
  \startnumberat{25}
  \begin{teX}
    \def\test{This is a test.} 
  \end{teX}
  
  \startnumberat{35}
  \begin{teX}
    % coloring comments is done in orange
    \def\test{This is a test.} 
  \end{teX}
\end{document}
%    \end{macrocode}
% \iffalse  
%</MWE-01>
% \fi
% \iffalse
%<*MWE-02>
% \fi
% \subsection{Listings MWE-02}
%    \begin{macrocode}
%% Example using |multitoc|
\documentclass{article}
\usepackage{phd}
\renewcommand{\multicolumntoc}{2}
\title{Typesetting the Table of Contents in Multiple Columns}
\author{Dr Y. Lazarides}
\begin{document}
\maketitle
\tableofcontents
\section{First section}
\begin{multicols}{3}
\lipsum[1-2]
\end{multicols}
\subsection{First subsection}
\subsection{Second subsection}
\subsection{Third subsection}
\subsection{Last subsection}
\section{Second section}
\subsection{First subsection}
\subsection{Second subsection}
\subsection{Third subsection}
\subsection{Last subsection}
\section{Last section}
\subsection{First subsection}
\subsection{Second subsection}
\subsection{Third subsection}
\subsection{Last subsection}
\end{document}
%    \end{macrocode}
% \iffalse  
%</MWE-02>
% \fi
% 
% \subsection{Listings MWE-03}
% 
% \iffalse
%<*MWE-03>
% \fi
%    \begin{macrocode}
%% example for using encoded commands such as guillemets. (If you need
%% shorthands you need to load babel.
%%
\documentclass{article}
\usepackage{phd}
\newcommand{\encone}[1]{{\fontencoding{T1}\selectfont#1}}
\begin{document}
\def\Kt#1{{\encone{#1}} &{\small\ttfamily\string#1}}

\noindent\begin{tabular}{@{}*8l@{}}
\toprule
\Kt\guillemotleft  & \Kt\guilsinglleft & \Kt\quotedblbase & \Kt\textquotedbl \\
\Kt\guillemotright & \Kt\guilsinglright & \Kt\quotesinglbase \\
\bottomrule
\end{tabular}
\medskip

\lipsum[1]
\end{document}
%    \end{macrocode}
% \iffalse  
%</MWE-03>
% \fi
% 
% \iffalse
%<*test-tufte>
% \fi
%    \begin{macrocode}
% clashes with options
\documentclass{tufte-book}
\usepackage{phd}
\begin{document}
\lipsum[1]
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-tufte>
% \fi
%
% \iffalse
%<*test-memoir>
% \fi
%    \begin{macrocode}
% clashes with options
\documentclass{memoir}
\usepackage{phd}
\begin{document}
\lipsum[1]
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-memoir>
% \fi
%
%\iffalse
%<*test-scrartcl>
% \fi
%    \begin{macrocode}
% clashes with options
\documentclass{scrartcl}
\usepackage{phd}
\begin{document}
\lipsum[1]
\end{document}
%    \end{macrocode}
% \iffalse  
%</test-scrartcl>
% \fi
% ^^A\addtocontents{toc}{\protect\end{multicols}}
% \Finale
% \PrintIndex
\endinput


%% One can use the multitoc for two column toc lof etc also see doc.dtx

%% Use ^^A for % sign otherwise it gives you problems













